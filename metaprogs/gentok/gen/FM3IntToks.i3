
(* -----------------------------------------------------------------------1- *)
(* This file is part of the FM3 Modula-3 compiler.                           *)
(* Copyright 2023        Rodney M. Bates.                                    *)
(* rodney.m.bates@acm.org                                                    *)
(* Licensed under the MIT License.                                           *)
(* -----------------------------------------------------------------------2- *)

(* This file was generated by FM3's GenTok metaprogram,
   from input file "FM3IntToks.gentok", with command line 
     "./gentok -T -t -c -n -o FM3IntToks.gentok". *)

INTERFACE FM3IntToks

; IMPORT IntSets

; TYPE TokTyp = INTEGER 

; PROCEDURE Image ( TokNo : TokTyp ) : TEXT 

; PROCEDURE Operands ( TokNo : TokTyp ) : TEXT 

; VAR TokSetTemp : IntSets . T

; VAR TokSetPatch : IntSets . T

; VAR TokSetW1Arg : IntSets . T
   (* ^At least one argument. *)

; VAR TokSetArgs : IntSets . T
   (* ^At least two arguments. *)

; CONST LtToTemp = 1
        (* ^Add this to Lt tokcode to get corresponding LtTemp tokcode. *)
; CONST LtToPatch = 2 
        (* ^Add this to Lt tokcode to get corresponding LtPatch tokcode. *)
; CONST LtToRt = 3    
        (* ^Add this to Lt tokcode to get corresponding Rt tokcode. *)
; CONST LtToOne = 4    
        (* ^Add this to Lt tokcode to get LM Infix tokcode. *)
; CONST LtToOnePatch = 6    
        (* ^Add this to Lt tokcode to get LM Infix patch tokcode. *)
; CONST LtToTwo = 7    
        (* ^Add this to Lt tokcode to get 2nd Infix tokcode. *)
; CONST LtToTwoPatch = 9    
        (* ^Add this to Lt tokcode to get 2nd Infix patch tokcode. *)
; CONST LtToListSep = 4    
        (* ^Add this to list Lt tokcode to get Sep tokcode. *)
; CONST LtToListSepPatch = 6    
        (* ^Add this to list Lt tokcode to get SepPatch tokcode. *)
; CONST RtToLt = - 3    
        (* ^Add this to Rt tokcode to get corresponding Lt tokcode. *)
; CONST RtToTemp = - 2    
        (* ^Add this to Rt tokcode to get corresponding LtTemp tokcode. *)
; CONST RtToPatch = - 1    
        (* ^Add this to Rt tokcode to get corresponding LtPatch tokcode. *)

(* Being low-numbered, these will read and write either forward
   or backward, without value change.
*)
(* ABS 128: *)

; CONST TkMinTok                                     =   128

(* LONE ItkNull: *)
; CONST ItkNull                         (*ArgCt: 0*) =   128 (*16_80 01 *)
(* LONE ItkBOF: *)
; CONST ItkBOF                          (*ArgCt: 0*) =   129 (*16_81 01 *)
(* LONE ItkEOF: *)
; CONST ItkEOF                          (*ArgCt: 0*) =   130 (*16_82 01 *)
(* LONE ItkLeftEnd: *)
; CONST ItkLeftEnd                      (*ArgCt: 0*) =   131 (*16_83 01 *)
(* LONE ItkRightEnd: *)
; CONST ItkRightEnd                     (*ArgCt: 0*) =   132 (*16_84 01 *)
(* IdAtom, Line, Column. *)
(* LONE ItkImport: *)
; CONST ItkImport                       (*ArgCt: 3*) =   133 (*16_85 01 *)
(* (IdAtom, Line, Column) for interface, decl. *)
(* LONE ItkFromImport: *)
; CONST ItkFromImport                   (*ArgCt: 6*) =   134 (*16_86 01 *)
(* (IdAtom, Line, Column) for interface, as. *)
(* LONE ItkImportAs: *)
; CONST ItkImportAs                     (*ArgCt: 6*) =   135 (*16_87 01 *)
(* LONE ItkFormalsListEmpty: *)
; CONST ItkFormalsListEmpty             (*ArgCt: 0*) =   136 (*16_88 01 *)
(* Position. *)
(* LONE ItkFormalTypeAbsent: *)
; CONST ItkFormalTypeAbsent             (*ArgCt: 2*) =   137 (*16_89 01 *)
(* Position. *)
(* LONE ItkFormalExprAbsent: *)
; CONST ItkFormalExprAbsent             (*ArgCt: 2*) =   138 (*16_8a 01 *)
(* Position. *)
(* LONE ItkRaisesSetAbsent: *)
; CONST ItkRaisesSetAbsent              (*ArgCt: 2*) =   139 (*16_8b 01 *)
(* Position. *)
(* LONE ItkRaisesANY: *)
; CONST ItkRaisesANY                    (*ArgCt: 2*) =   140 (*16_8c 01 *)
(* Position. *)
(* LONE ItkResultTypeAbsent: *)
; CONST ItkResultTypeAbsent             (*ArgCt: 2*) =   141 (*16_8d 01 *)
(* Position. *)
(* LONE ItkProcBodyAbsent: *)
; CONST ItkProcBodyAbsent               (*ArgCt: 2*) =   142 (*16_8e 01 *)
(* Scopes and declarations within. *)
(* ScopeNo. *)
(* ItkScopePatch not used. *)
(* LONE ItkScopeLt: *)
; CONST ItkScopeLt                      (*ArgCt: 1*) =   143 (*16_8f 01 *)
(* ScopeNo. *)
(* LONE ItkScopeRt: *)
; CONST ItkScopeRt                      (*ArgCt: 1*) =   144 (*16_90 01 *)
(* IdAtom, position. Occurs before unnest. *)
(* LONE ItkRefId: *)
; CONST ItkRefId                        (*ArgCt: 3*) =   145 (*16_91 01 *)
(* DeclNo, position. Occurs after unnest. *)
(* LONE ItkRefNo: *)
; CONST ItkRefNo                        (*ArgCt: 3*) =   146 (*16_92 01 *)
(* IdAtom, position *)
(* LONE ItkDuplDeclId: *)
; CONST ItkDuplDeclId                   (*ArgCt: 3*) =   147 (*16_93 01 *)
(* DeclKind, IdAtom, position *)
(* LONE ItkDeclId: *)
; CONST ItkDeclId                       (*ArgCt: 4*) =   148 (*16_94 01 *)
(* DeclNo, position *)
(* LONE ItkDeclNo: *)
; CONST ItkDeclNo                       (*ArgCt: 3*) =   149 (*16_95 01 *)
(* FIXED ItkQualId: *)
; CONST ItkQualIdLt                     (*ArgCt: 0*) =   150 (*16_96 01 *)
; CONST ItkQualIdLtTemp                 (*ArgCt: 0*) =   151 (*16_97 01 *)
; CONST ItkQualIdLtPatch                (*ArgCt: 0*) =   152 (*16_98 01 *)
; CONST ItkQualIdRt                     (*ArgCt: 0*) =   153 (*16_99 01 *)

(* Position. *)
(* FIXED ItkFuncSignature: *)
; CONST ItkFuncSignatureLt              (*ArgCt: 2*) =   154 (*16_9a 01 *)
; CONST ItkFuncSignatureLtTemp          (*ArgCt: 2*) =   155 (*16_9b 01 *)
; CONST ItkFuncSignatureLtPatch         (*ArgCt: 2*) =   156 (*16_9c 01 *)
; CONST ItkFuncSignatureRt              (*ArgCt: 2*) =   157 (*16_9d 01 *)

(* Position. *)
(* FIXED ItkProcSignature: *)
; CONST ItkProcSignatureLt              (*ArgCt: 2*) =   158 (*16_9e 01 *)
; CONST ItkProcSignatureLtTemp          (*ArgCt: 2*) =   159 (*16_9f 01 *)
; CONST ItkProcSignatureLtPatch         (*ArgCt: 2*) =   160 (*16_a0 01 *)
; CONST ItkProcSignatureRt              (*ArgCt: 2*) =   161 (*16_a1 01 *)

(* Position of colon. *)
(* FIXED ItkFormalType: *)
; CONST ItkFormalTypeLt                 (*ArgCt: 2*) =   162 (*16_a2 01 *)
; CONST ItkFormalTypeLtTemp             (*ArgCt: 2*) =   163 (*16_a3 01 *)
; CONST ItkFormalTypeLtPatch            (*ArgCt: 2*) =   164 (*16_a4 01 *)
; CONST ItkFormalTypeRt                 (*ArgCt: 2*) =   165 (*16_a5 01 *)

(* Position of ":=" *)
(* FIXED ItkFormalExpr: *)
; CONST ItkFormalExprLt                 (*ArgCt: 2*) =   166 (*16_a6 01 *)
; CONST ItkFormalExprLtTemp             (*ArgCt: 2*) =   167 (*16_a7 01 *)
; CONST ItkFormalExprLtPatch            (*ArgCt: 2*) =   168 (*16_a8 01 *)
; CONST ItkFormalExprRt                 (*ArgCt: 2*) =   169 (*16_a9 01 *)

(* Position of colon. *)
(* FIXED ItkResultType: *)
; CONST ItkResultTypeLt                 (*ArgCt: 2*) =   170 (*16_aa 01 *)
; CONST ItkResultTypeLtTemp             (*ArgCt: 2*) =   171 (*16_ab 01 *)
; CONST ItkResultTypeLtPatch            (*ArgCt: 2*) =   172 (*16_ac 01 *)
; CONST ItkResultTypeRt                 (*ArgCt: 2*) =   173 (*16_ad 01 *)

(* Position of RAISES. *)
(* FIXED ItkRaisesSet: *)
; CONST ItkRaisesSetLt                  (*ArgCt: 2*) =   174 (*16_ae 01 *)
; CONST ItkRaisesSetLtTemp              (*ArgCt: 2*) =   175 (*16_af 01 *)
; CONST ItkRaisesSetLtPatch             (*ArgCt: 2*) =   176 (*16_b0 01 *)
; CONST ItkRaisesSetRt                  (*ArgCt: 2*) =   177 (*16_b1 01 *)

(* Atom of signature. *)
(* FIXED ItkProcNoBody: *)
; CONST ItkProcNoBodyLt                 (*ArgCt: 1*) =   178 (*16_b2 01 *)
; CONST ItkProcNoBodyLtTemp             (*ArgCt: 1*) =   179 (*16_b3 01 *)
; CONST ItkProcNoBodyLtPatch            (*ArgCt: 1*) =   180 (*16_b4 01 *)
; CONST ItkProcNoBodyRt                 (*ArgCt: 1*) =   181 (*16_b5 01 *)

(* Atom of signature. *)
(* FIXED ItkProcWBody: *)
; CONST ItkProcWBodyLt                  (*ArgCt: 1*) =   182 (*16_b6 01 *)
; CONST ItkProcWBodyLtTemp              (*ArgCt: 1*) =   183 (*16_b7 01 *)
; CONST ItkProcWBodyLtPatch             (*ArgCt: 1*) =   184 (*16_b8 01 *)
; CONST ItkProcWBodyRt                  (*ArgCt: 1*) =   185 (*16_b9 01 *)

(* Position of equal sign. *)
(* FIXED ItkProcBody: *)
; CONST ItkProcBodyLt                   (*ArgCt: 2*) =   186 (*16_ba 01 *)
; CONST ItkProcBodyLtTemp               (*ArgCt: 2*) =   187 (*16_bb 01 *)
; CONST ItkProcBodyLtPatch              (*ArgCt: 2*) =   188 (*16_bc 01 *)
; CONST ItkProcBodyRt                   (*ArgCt: 2*) =   189 (*16_bd 01 *)

(* Position of "(". *)
(* FIXED ItkProcType: *)
; CONST ItkProcTypeLt                   (*ArgCt: 2*) =   190 (*16_be 01 *)
; CONST ItkProcTypeLtTemp               (*ArgCt: 2*) =   191 (*16_bf 01 *)
; CONST ItkProcTypeLtPatch              (*ArgCt: 2*) =   192 (*16_c0 01 *)
; CONST ItkProcTypeRt                   (*ArgCt: 2*) =   193 (*16_c1 01 *)

(* Position of LM declaration. *)
(* FIXED ItkBlock: *)
; CONST ItkBlockLt                      (*ArgCt: 2*) =   194 (*16_c2 01 *)
; CONST ItkBlockLtTemp                  (*ArgCt: 2*) =   195 (*16_c3 01 *)
; CONST ItkBlockLtPatch                 (*ArgCt: 2*) =   196 (*16_c4 01 *)
; CONST ItkBlockRt                      (*ArgCt: 2*) =   197 (*16_c5 01 *)

(* Position of BEGIN. *)
; CONST ItkBlockBeg                     (*ArgCt: 2*) =   198 (*16_c6 01 *)
; CONST ItkBlockBegTemp                 (*ArgCt: 2*) =   199 (*16_c7 01 *)
; CONST ItkBlockBegPatch                (*ArgCt: 2*) =   200 (*16_c8 01 *)

(* Type decls. *)
(* LONE ItkVarDeclId: *)
; CONST ItkVarDeclId                    (*ArgCt: 4*) =   201 (*16_c9 01 *)
(* LONE ItkRecFieldId: *)
; CONST ItkRecFieldId                   (*ArgCt: 4*) =   202 (*16_ca 01 *)
(* LONE ItkVALUEFormalId: *)
; CONST ItkVALUEFormalId                (*ArgCt: 4*) =   203 (*16_cb 01 *)
(* LONE ItkVARFormalId: *)
; CONST ItkVARFormalId                  (*ArgCt: 4*) =   204 (*16_cc 01 *)
(* LONE ItkROFormalId: *)
; CONST ItkROFormalId                   (*ArgCt: 4*) =   205 (*16_cd 01 *)
(* Position of RECORD, field count. *)
(* FIXED ItkRecDef: *)
; CONST ItkRecDefLt                     (*ArgCt: 3*) =   206 (*16_ce 01 *)
; CONST ItkRecDefLtTemp                 (*ArgCt: 3*) =   207 (*16_cf 01 *)
; CONST ItkRecDefLtPatch                (*ArgCt: 3*) =   208 (*16_d0 01 *)
; CONST ItkRecDefRt                     (*ArgCt: 3*) =   209 (*16_d1 01 *)

(* Position of LM ident (Lt) or position of semicolon (Rt). *)
(* FIXED ItkRecField: *)
; CONST ItkRecFieldLt                   (*ArgCt: 2*) =   210 (*16_d2 01 *)
; CONST ItkRecFieldLtTemp               (*ArgCt: 2*) =   211 (*16_d3 01 *)
; CONST ItkRecFieldLtPatch              (*ArgCt: 2*) =   212 (*16_d4 01 *)
; CONST ItkRecFieldRt                   (*ArgCt: 2*) =   213 (*16_d5 01 *)

(* Position of colon. *)
; CONST ItkRecFieldType                 (*ArgCt: 2*) =   214 (*16_d6 01 *)
; CONST ItkRecFieldTypeTemp             (*ArgCt: 2*) =   215 (*16_d7 01 *)
; CONST ItkRecFieldTypePatch            (*ArgCt: 2*) =   216 (*16_d8 01 *)

(* Position of becomes/ *)
; CONST ItkRecFieldVal                  (*ArgCt: 2*) =   217 (*16_d9 01 *)
; CONST ItkRecFieldValTemp              (*ArgCt: 2*) =   218 (*16_da 01 *)
; CONST ItkRecFieldValPatch             (*ArgCt: 2*) =   219 (*16_db 01 *)

(* Position of ident (Lt) or position of semicolon (Rt). *)
(* FIXED ItkTypeDecl: *)
; CONST ItkTypeDeclLt                   (*ArgCt: 2*) =   220 (*16_dc 01 *)
; CONST ItkTypeDeclLtTemp               (*ArgCt: 2*) =   221 (*16_dd 01 *)
; CONST ItkTypeDeclLtPatch              (*ArgCt: 2*) =   222 (*16_de 01 *)
; CONST ItkTypeDeclRt                   (*ArgCt: 2*) =   223 (*16_df 01 *)

(* I don't think we need a position for this. *)
; CONST ItkTypeDeclEq                   (*ArgCt: 0*) =   224 (*16_e0 01 *)
; CONST ItkTypeDeclEqTemp               (*ArgCt: 0*) =   225 (*16_e1 01 *)
; CONST ItkTypeDeclEqPatch              (*ArgCt: 0*) =   226 (*16_e2 01 *)

(* Variable decls. *)
(* One decl, with possibly multiple idents. *)
(* Position of LM ident (Lt) or position of semicolon (Rt). *)
(* FIXED ItkVarDecl: *)
; CONST ItkVarDeclLt                    (*ArgCt: 2*) =   227 (*16_e3 01 *)
; CONST ItkVarDeclLtTemp                (*ArgCt: 2*) =   228 (*16_e4 01 *)
; CONST ItkVarDeclLtPatch               (*ArgCt: 2*) =   229 (*16_e5 01 *)
; CONST ItkVarDeclRt                    (*ArgCt: 2*) =   230 (*16_e6 01 *)

(* Position of colon. *)
; CONST ItkVarDeclType                  (*ArgCt: 2*) =   231 (*16_e7 01 *)
; CONST ItkVarDeclTypeTemp              (*ArgCt: 2*) =   232 (*16_e8 01 *)
; CONST ItkVarDeclTypePatch             (*ArgCt: 2*) =   233 (*16_e9 01 *)

(* Position of becomes/ *)
; CONST ItkVarDeclVal                   (*ArgCt: 2*) =   234 (*16_ea 01 *)
; CONST ItkVarDeclValTemp               (*ArgCt: 2*) =   235 (*16_eb 01 *)
; CONST ItkVarDeclValPatch              (*ArgCt: 2*) =   236 (*16_ec 01 *)

(* GenTok implicitly gives list tokens:
     The usual patch coordinate, if it's a patch token.
     One integer operand for element count (Lt & Rt tokens)
       or, for separator tokens, number of elements to left.  
     Position.  For Lt & Rt, of what source token  depends on the list.
       For separators, of the source separator, or if none, beginning
       of element to right.
*)
(* Position of EXPORTS. *)
(* LIST ItkExportIdList: *)
; CONST ItkExportIdListLt               (*ArgCt: 3*) =   237 (*16_ed 01 *)
; CONST ItkExportIdListLtTemp           (*ArgCt: 3*) =   238 (*16_ee 01 *)
; CONST ItkExportIdListLtPatch          (*ArgCt: 3*) =   239 (*16_ef 01 *)
; CONST ItkExportIdListRt               (*ArgCt: 3*) =   240 (*16_f0 01 *)

; CONST ItkExportIdListSep              (*ArgCt: 3*) =   241 (*16_f1 01 *)
; CONST ItkExportIdListSepTemp          (*ArgCt: 3*) =   242 (*16_f2 01 *)
; CONST ItkExportIdListSepPatch         (*ArgCt: 3*) =   243 (*16_f3 01 *)

(* Position of "(" *)
(* LIST ItkGenFormalIdList: *)
; CONST ItkGenFormalIdListLt            (*ArgCt: 3*) =   244 (*16_f4 01 *)
; CONST ItkGenFormalIdListLtTemp        (*ArgCt: 3*) =   245 (*16_f5 01 *)
; CONST ItkGenFormalIdListLtPatch       (*ArgCt: 3*) =   246 (*16_f6 01 *)
; CONST ItkGenFormalIdListRt            (*ArgCt: 3*) =   247 (*16_f7 01 *)

; CONST ItkGenFormalIdListSep           (*ArgCt: 3*) =   248 (*16_f8 01 *)
; CONST ItkGenFormalIdListSepTemp       (*ArgCt: 3*) =   249 (*16_f9 01 *)
; CONST ItkGenFormalIdListSepPatch      (*ArgCt: 3*) =   250 (*16_fa 01 *)

(* Position of "(" *)
(* LIST ItkGenActualIdList: *)
; CONST ItkGenActualIdListLt            (*ArgCt: 3*) =   251 (*16_fb 01 *)
; CONST ItkGenActualIdListLtTemp        (*ArgCt: 3*) =   252 (*16_fc 01 *)
; CONST ItkGenActualIdListLtPatch       (*ArgCt: 3*) =   253 (*16_fd 01 *)
; CONST ItkGenActualIdListRt            (*ArgCt: 3*) =   254 (*16_fe 01 *)

; CONST ItkGenActualIdListSep           (*ArgCt: 3*) =   255 (*16_ff 01 *)
; CONST ItkGenActualIdListSepTemp       (*ArgCt: 3*) =   256 (*16_80 02 *)
; CONST ItkGenActualIdListSepPatch      (*ArgCt: 3*) =   257 (*16_81 02 *)

(* Position of "(" *)
(* LIST ItkVarDeclIdList: *)
; CONST ItkVarDeclIdListLt              (*ArgCt: 3*) =   258 (*16_82 02 *)
; CONST ItkVarDeclIdListLtTemp          (*ArgCt: 3*) =   259 (*16_83 02 *)
; CONST ItkVarDeclIdListLtPatch         (*ArgCt: 3*) =   260 (*16_84 02 *)
; CONST ItkVarDeclIdListRt              (*ArgCt: 3*) =   261 (*16_85 02 *)

; CONST ItkVarDeclIdListSep             (*ArgCt: 3*) =   262 (*16_86 02 *)
; CONST ItkVarDeclIdListSepTemp         (*ArgCt: 3*) =   263 (*16_87 02 *)
; CONST ItkVarDeclIdListSepPatch        (*ArgCt: 3*) =   264 (*16_88 02 *)

(* Position of "RECORD" *)
(* LIST ItkRecFieldIdList: *)
; CONST ItkRecFieldIdListLt             (*ArgCt: 3*) =   265 (*16_89 02 *)
; CONST ItkRecFieldIdListLtTemp         (*ArgCt: 3*) =   266 (*16_8a 02 *)
; CONST ItkRecFieldIdListLtPatch        (*ArgCt: 3*) =   267 (*16_8b 02 *)
; CONST ItkRecFieldIdListRt             (*ArgCt: 3*) =   268 (*16_8c 02 *)

; CONST ItkRecFieldIdListSep            (*ArgCt: 3*) =   269 (*16_8d 02 *)
; CONST ItkRecFieldIdListSepTemp        (*ArgCt: 3*) =   270 (*16_8e 02 *)
; CONST ItkRecFieldIdListSepPatch       (*ArgCt: 3*) =   271 (*16_8f 02 *)

(* Position of "(" *)
(* LIST ItkFormalsList: *)
; CONST ItkFormalsListLt                (*ArgCt: 3*) =   272 (*16_90 02 *)
; CONST ItkFormalsListLtTemp            (*ArgCt: 3*) =   273 (*16_91 02 *)
; CONST ItkFormalsListLtPatch           (*ArgCt: 3*) =   274 (*16_92 02 *)
; CONST ItkFormalsListRt                (*ArgCt: 3*) =   275 (*16_93 02 *)

; CONST ItkFormalsListSep               (*ArgCt: 3*) =   276 (*16_94 02 *)
; CONST ItkFormalsListSepTemp           (*ArgCt: 3*) =   277 (*16_95 02 *)
; CONST ItkFormalsListSepPatch          (*ArgCt: 3*) =   278 (*16_96 02 *)

(* Position of VALUE or 1st ident, if no mode. *)
(* LIST ItkVALUEFormalIdList: *)
; CONST ItkVALUEFormalIdListLt          (*ArgCt: 3*) =   279 (*16_97 02 *)
; CONST ItkVALUEFormalIdListLtTemp      (*ArgCt: 3*) =   280 (*16_98 02 *)
; CONST ItkVALUEFormalIdListLtPatch     (*ArgCt: 3*) =   281 (*16_99 02 *)
; CONST ItkVALUEFormalIdListRt          (*ArgCt: 3*) =   282 (*16_9a 02 *)

; CONST ItkVALUEFormalIdListSep         (*ArgCt: 3*) =   283 (*16_9b 02 *)
; CONST ItkVALUEFormalIdListSepTemp     (*ArgCt: 3*) =   284 (*16_9c 02 *)
; CONST ItkVALUEFormalIdListSepPatch    (*ArgCt: 3*) =   285 (*16_9d 02 *)

(* Position of VAR. *)
(* LIST ItkVARFormalIdList: *)
; CONST ItkVARFormalIdListLt            (*ArgCt: 3*) =   286 (*16_9e 02 *)
; CONST ItkVARFormalIdListLtTemp        (*ArgCt: 3*) =   287 (*16_9f 02 *)
; CONST ItkVARFormalIdListLtPatch       (*ArgCt: 3*) =   288 (*16_a0 02 *)
; CONST ItkVARFormalIdListRt            (*ArgCt: 3*) =   289 (*16_a1 02 *)

; CONST ItkVARFormalIdListSep           (*ArgCt: 3*) =   290 (*16_a2 02 *)
; CONST ItkVARFormalIdListSepTemp       (*ArgCt: 3*) =   291 (*16_a3 02 *)
; CONST ItkVARFormalIdListSepPatch      (*ArgCt: 3*) =   292 (*16_a4 02 *)

(* Position of READONLY. *)
(* LIST ItkROFormalIdList: *)
; CONST ItkROFormalIdListLt             (*ArgCt: 3*) =   293 (*16_a5 02 *)
; CONST ItkROFormalIdListLtTemp         (*ArgCt: 3*) =   294 (*16_a6 02 *)
; CONST ItkROFormalIdListLtPatch        (*ArgCt: 3*) =   295 (*16_a7 02 *)
; CONST ItkROFormalIdListRt             (*ArgCt: 3*) =   296 (*16_a8 02 *)

; CONST ItkROFormalIdListSep            (*ArgCt: 3*) =   297 (*16_a9 02 *)
; CONST ItkROFormalIdListSepTemp        (*ArgCt: 3*) =   298 (*16_aa 02 *)
; CONST ItkROFormalIdListSepPatch       (*ArgCt: 3*) =   299 (*16_ab 02 *)

(* LIST ItkDeclList: *)
; CONST ItkDeclListLt                   (*ArgCt: 3*) =   300 (*16_ac 02 *)
; CONST ItkDeclListLtTemp               (*ArgCt: 3*) =   301 (*16_ad 02 *)
; CONST ItkDeclListLtPatch              (*ArgCt: 3*) =   302 (*16_ae 02 *)
; CONST ItkDeclListRt                   (*ArgCt: 3*) =   303 (*16_af 02 *)

; CONST ItkDeclListSep                  (*ArgCt: 3*) =   304 (*16_b0 02 *)
; CONST ItkDeclListSepTemp              (*ArgCt: 3*) =   305 (*16_b1 02 *)
; CONST ItkDeclListSepPatch             (*ArgCt: 3*) =   306 (*16_b2 02 *)

(* Statements *)
(* FIXED ItkBecomes: *)
; CONST ItkBecomesLt                    (*ArgCt: 2*) =   307 (*16_b3 02 *)
; CONST ItkBecomesLtTemp                (*ArgCt: 2*) =   308 (*16_b4 02 *)
; CONST ItkBecomesLtPatch               (*ArgCt: 2*) =   309 (*16_b5 02 *)
; CONST ItkBecomesRt                    (*ArgCt: 2*) =   310 (*16_b6 02 *)

(* Position of infix token, x3. *)
; CONST ItkBecomesInfix                 (*ArgCt: 2*) =   311 (*16_b7 02 *)
; CONST ItkBecomesInfixTemp             (*ArgCt: 2*) =   312 (*16_b8 02 *)
; CONST ItkBecomesInfixPatch            (*ArgCt: 2*) =   313 (*16_b9 02 *)

(*

FIXED ItkModule IDENT INT 2 (* IdAtom , UnitNo. *)
        Begin
. 

LIST ItkExportsList
       (* Element Count, Element No. *) 
.

LIST ItkIdPlusList
       (* Element Count, Element No. *) 
.

FIXED ItkExport (* Ident, Unit No. *) . 
*)
(* End of FM3IntToks. *)
; CONST TkMaxTok                                     =   313

; END FM3IntToks
.

