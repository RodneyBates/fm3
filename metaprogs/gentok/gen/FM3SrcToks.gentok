
(* -----------------------------------------------------------------------1- *)
(* This file is part of the FM3 Modula-3 compiler.                           *)
(* Copyright 2023..2024  Rodney M. Bates.                                    *)
(* rodney.m.bates@acm.org                                                    *)
(* Licensed under the MIT License.                                           *)
(* -----------------------------------------------------------------------2- *)

(* Input file FM3SrcTok.gentok, to metaprogram GenTok. *)

UNITNAME FM3SrcToks
(* DECREASING Back to positive tokens, so lalr can handle them *) 

(* Source tokens for FM3 Modula-3 compiler. 
   These are near the high end of 2^14-1.
   They will not occur in intermediate streams.  
*)

SRC 

ABS 0

   StkEOF . (* From lalr, Gen.m3, FindFirstToken:
               "EndOfToken wird immer mit 0 codiert"
            *)
              
(* Not used in FM3Scanner or FM3Parser: *)
   StkUnknown .
   StkBOF . 
   
ABS 5

   (* These source token codes' declarations have copies in FM3Parser.lalr,
      in lalr's own syntax, which these must remain consistent with.
   *) 

   (* Modula-3 Reserved words: *) 
   StkRwAND            "AND" .   
   StkRwANY            "ANY" .   
   StkRwARRAY          "ARRAY" .   
   StkRwAS             "AS" .   
   StkRwBEGIN          "BEGIN" .   
   StkRwBITS           "BITS" .   
   StkRwBRANDED        "BRANDED" .   
   StkRwBY             "BY" .   
   StkRwCASE           "CASE" .   
   StkRwCONST          "CONST" .   
   StkRwDIV            "DIV" .   
   StkRwDO             "DO" .   
   StkRwELSE           "ELSE" .   
   StkRwELSIF          "ELSIF" .   
   StkRwEND            "END" .   
   StkRwEVAL           "EVAL" .   
   StkRwEXCEPT         "EXCEPT" .   
   StkRwEXCEPTION      "EXCEPTION" .   
   StkRwEXIT           "EXIT" .   
   StkRwEXPORTS        "EXPORTS" .   
   StkRwFINALLY        "FINALLY" .   
   StkRwFOR            "FOR" .   
   StkRwFROM           "FROM" .   
   StkRwGENERIC        "GENERIC" .   
   StkRwIF             "IF" .   
   StkRwIMPORT         "IMPORT" .   
   StkRwIN             "IN" .   
   StkRwINTERFACE      "INTERFACE" .   
   StkRwLOCK           "LOCK" .   
   StkRwLOOP           "LOOP" .   
   StkRwMETHODS        "METHODS" .   
   StkRwMOD            "MOD" .   
   StkRwMODULE         "MODULE" .   
   StkRwNOT            "NOT" .   
   StkRwOBJECT         "OBJECT" .   
   StkRwOF             "OF" .   
   StkRwOR             "OR" .   
   StkRwOVERRIDES      "OVERRIDES" .   
   StkRwPROCEDURE      "PROCEDURE" .   
   StkRwRAISE          "RAISE" .   
   StkRwRAISES         "RAISES" .   
   StkRwREADONLY       "READONLY" .   
   StkRwRECORD         "RECORD" .   
   StkRwREF            "REF" .   
   StkRwREPEAT         "REPEAT" .   
   StkRwRETURN         "RETURN" .   
   StkRwREVEAL         "REVEAL" .   
   StkRwROOT           "ROOT" .   
   StkRwSET            "SET" .   
   StkRwTHEN           "THEN" .   
   StkRwTO             "TO" .   
   StkRwTRY            "TRY" .   
   StkRwTYPE           "TYPE" .   
   StkRwTYPECASE       "TYPECASE" .   
   StkRwUNSAFE         "UNSAFE" .   
   StkRwUNTIL          "UNTIL" .   
   StkRwUNTRACED       "UNTRACED" .   
   StkRwVALUE          "VALUE" .   
   StkRwVAR            "VAR" .   
   StkRwWHILE          "WHILE" .   
   StkRwWITH           "WITH" .

   (* Special character tokens: *) 
   StkSemicolon        ";" . 
   StkDot              "." . 
   StkEqual            "=" . 
   StkOpenParen        "(" . 
   StkCloseParen       ")" . 
   StkComma            "," . 
   StkColon            ":" . 
   StkSubtype          "<:" . 
   StkBecomes          ":=" . 
   StkOpenBrace        "{" . 
   StkCloseBrace       "}" . 
   StkStroke           "|" . 
   StkArrow            "=>" . 
   StkEllipsis         ".." . 
   StkOpenBracket      "[" . 
   StkCloseBracket     "]" . 
   StkUnequal          "#" . 
   StkLess             "<" . 
   StkGreater          ">" . 
   StkLessEqual        "<=" .

   StkGreaterEqual     ">=" . 
   StkPlus             "+" . 
   StkMinus            "-" . 
   StkAmpersand        "&" . 
   StkStar             "*" . 
   StkSlash            "/" . 
   StkDeref            "^" . 
   StkOpenPragma       "<*" . 
   StkClosePragma      "*>" .

   (* Variable tokens: *) 
   StkIdent .
   StkIntLit . 
   StkLongIntLit . 
   StkBasedLit .  
   StkLongBasedLit . 
   StkRealLit .
   StkLongRealLit .
   StkExtendedLit . 
   StkTextLit . 
   StkWideTextLit . 
   StkCharLit . 
   StkWideCharLit .
   StkLexErrChars .
   StkPragmaId . (* Not a known pragma ident, but found where one is expected. *)
   
   (* The scanner will recognize predefined ids in interfaces that have special
      treatment by the compiler and reserved ids using the same lex machine as
      reserved words, but treat each as an identifier whose atom id is actually
      the negated source token code. 
   *) 


   (* Reserved identifiers: *)
NEXT StkMinRid . 
   RidNull             "<RidNull>" . (* Scanner will never present this. *) 
   RidABS              "ABS" . 
   RidADDRESS          "ADDRESS" . 
   RidADR              "ADR" . 
   RidADRSIZE          "ADRSIZE" . 
   RidBITSIZE          "BITSIZE" . 
   RidBOOLEAN          "BOOLEAN" . 
   RidBYTESIZE         "BYTESIZE" . 
   RidCARDINAL         "CARDINAL" . 
   RidCEILING          "CEILING" . 
   RidCHAR             "CHAR" . 
   RidDEC              "DEC" . 
   RidDISPOSE          "DISPOSE" . 
   RidEXTENDED         "EXTENDED" . 
   RidFALSE            "FALSE" . 
   RidFIRST            "FIRST" . 
   RidFLOAT            "FLOAT" . 
   RidFLOOR            "FLOOR" . 
   RidINC              "INC" . 
   RidINTEGER          "INTEGER" . 
   RidISTYPE           "ISTYPE" . 
   RidLAST             "LAST" . 
   RidLONGCARD         "LONGCARD" . 
   RidLONGINT          "LONGINT" . 
   RidLONGREAL         "LONGREAL" . 
   RidLOOPHOLE         "LOOPHOLE" . 
   RidMAX              "MAX" . 
   RidMIN              "MIN" . 
   RidMUTEX            "MUTEX" . 
   RidNARROW           "NARROW" . 
   RidNEW              "NEW" . 
   RidNIL              "NIL" . 
   RidNULL             "NULL" . 
   RidNUMBER           "NUMBER" . 
   RidORD              "ORD" . 
   RidREAL             "REAL" . 
   RidREFANY           "REFANY" . 
   RidROUND            "ROUND" . 
   RidSUBARRAY         "SUBARRAY" . 
   RidTEXT             "TEXT" . 
   RidTRUE             "TRUE" . 
   RidTRUNC            "TRUNC" . 
   RidTYPECODE         "TYPECODE" . 
   RidVAL              "VAL" .
NEXT StkMaxRid . 
   RidWIDECHAR         "WIDECHAR" .

   (* ROOT and UNTRACED behave semantically like reserved identifiers, but
      each occurs in a different set of syntactic contexts from identifiers,
      so they are source-code reserved words.  We convert those after parsing
      into reserved idents with the following Rid atoms.  The scanner
      will not recognize them.
   *)
   
   RidROOT             "%ROOT" .
   RidUNTRACEDROOT     "%UNTRACED_ROOT" .

   (* Predefined identifiers.  Scanner will treat these as ordinary
      identifiers, except within a language-mandated interface they
      are declared in, in which case scanner treats them like
      reserved identifers.
   *) 
NEXT StkMinPredef . 
   StkPdT              "T" . 
   StkPdSize           "Size" . 
   StkPdPlus           "Plus" . 
   StkPdTimes          "Times" . 
   StkPdMinus          "Minus" . 
   StkPdDivide         "Divide" . 
   StkPdMod            "Mod" . 
   StkPdLT             "LT" . 
   StkPdLE             "LE" . 
   StkPdGT             "GT" . 
   StkPdGE             "GE" . 
   StkPdAnd            "And" . 
   StkPdOr             "Or" . 
   StkPdXor            "Xor" . 
   StkPdNot            "Not" . 
   StkPdShift          "Shift" . 
   StkPdLeftShift      "LeftShift" . 
   StkPdRightShift     "RightShift" . 
   StkPdRotate         "Rotate" . 
   StkPdLeftRotate     "LeftRotate" . 
   StkPdRightRotate    "RightRotate" . 
   StkPdExtract        "Extract" . 
NEXT StkMaxPredef . 
   StkPdInsert         "Insert" . 

(* End of FM3SrcToks.gentok. *) 
