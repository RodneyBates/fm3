
(* -----------------------------------------------------------------------1- *)
(* This file is part of the FM3 Modula-3 compiler.                           *)
(* Copyright 2023..2024  Rodney M. Bates.                                    *)
(* rodney.m.bates@acm.org                                                    *)
(* Licensed under the MIT License.                                           *)
(* -----------------------------------------------------------------------2- *)

(* Input file FM3SrcTok.gentok, to metaprogram GenTok. *)

UNITNAME FM3SrcToks
(* DECREASING BAck to positive tokens, so lalr can handle them *) 

(* Source tokens for FM3 Modula-3 compiler. 
   These are near the high end of 2^14-1.
   They will not occur in intermediate streams.  
*)

SRC 

ABS 0

   StkEOF . (* From lalr, Gen.m3, FindFirstToken:
               "EndOfToken wird immer mit 0 codiert"
            *)
              
(* Not used in FM3Scanner or FM3Parser: *)
   StkUnknown .
   StkBOF . 
   
ABS 5

   (* These source token codes' declarations have copies in FM3Parser.lalr,
      in lalr's own syntax, which these must remain consistent with.
   *) 

   (* Modula-3 Reserved words: *) 
   StkRwAND            "AND" .   
   StkRwANY            "ANY" .   
   StkRwARRAY          "ARRAY" .   
   StkRwAS             "AS" .   
   StkRwBEGIN          "BEGIN" .   
   StkRwBITS           "BITS" .   
   StkRwBRANDED        "BRANDED" .   
   StkRwBY             "BY" .   
   StkRwCASE           "CASE" .   
   StkRwCONST          "CONST" .   
   StkRwDIV            "DIV" .   
   StkRwDO             "DO" .   
   StkRwELSE           "ELSE" .   
   StkRwELSIF          "ELSIF" .   
   StkRwEND            "END" .   
   StkRwEVAL           "EVAL" .   
   StkRwEXCEPT         "EXCEPT" .   
   StkRwEXCEPTION      "EXCEPTION" .   
   StkRwEXIT           "EXIT" .   
   StkRwEXPORTS        "EXPORTS" .   
   StkRwFINALLY        "FINALLY" .   
   StkRwFOR            "FOR" .   
   StkRwFROM           "FROM" .   
   StkRwGENERIC        "GENERIC" .   
   StkRwIF             "IF" .   
   StkRwIMPORT         "IMPORT" .   
   StkRwIN             "IN" .   
   StkRwINTERFACE      "INTERFACE" .   
   StkRwLOCK           "LOCK" .   
   StkRwLOOP           "LOOP" .   
   StkRwMETHODS        "METHODS" .   
   StkRwMOD            "MOD" .   
   StkRwMODULE         "MODULE" .   
   StkRwNOT            "NOT" .   
   StkRwOBJECT         "OBJECT" .   
   StkRwOF             "OF" .   
   StkRwOR             "OR" .   
   StkRwOVERRIDES      "OVERRIDES" .   
   StkRwPROCEDURE      "PROCEDURE" .   
   StkRwRAISE          "RAISE" .   
   StkRwRAISES         "RAISES" .   
   StkRwREADONLY       "READONLY" .   
   StkRwRECORD         "RECORD" .   
   StkRwREF            "REF" .   
   StkRwREPEAT         "REPEAT" .   
   StkRwRETURN         "RETURN" .   
   StkRwREVEAL         "REVEAL" .   
   StkRwROOT           "ROOT" .   
   StkRwSET            "SET" .   
   StkRwTHEN           "THEN" .   
   StkRwTO             "TO" .   
   StkRwTRY            "TRY" .   
   StkRwTYPE           "TYPE" .   
   StkRwTYPECASE       "TYPECASE" .   
   StkRwUNSAFE         "UNSAFE" .   
   StkRwUNTIL          "UNTIL" .   
   StkRwUNTRACED       "UNTRACED" .   
   StkRwVALUE          "VALUE" .   
   StkRwVAR            "VAR" .   
   StkRwWHILE          "WHILE" .   
   StkRwWITH           "WITH" .

   (* Special character tokens: *) 
   StkSemicolon        ";" . 
   StkDot              "." . 
   StkEqual            "=" . 
   StkOpenParen        "(" . 
   StkCloseParen       ")" . 
   StkComma            "," . 
   StkColon            ":" . 
   StkSubtype          "<:" . 
   StkBecomes          ":=" . 
   StkOpenBrace        "{" . 
   StkCloseBrace       "}" . 
   StkStroke           "|" . 
   StkArrow            "=>" . 
   StkEllipsis         ".." . 
   StkOpenBracket      "[" . 
   StkCloseBracket     "]" . 
   StkUnequal          "#" . 
   StkLess             "<" . 
   StkGreater          ">" . 
   StkLessEqual        "<=" .

   StkGreaterEqual     ">=" . 
   StkPlus             "+" . 
   StkMinus            "-" . 
   StkAmpersand        "&" . 
   StkStar             "*" . 
   StkSlash            "/" . 
   StkDeref            "^" . 
   StkOpenPragma       "<*" . 
   StkClosePragma      "*>" .

   (* Variable tokens: *) 
   StkIdent .
   StkIntLit . 
   StkLongIntLit . 
   StkBasedLit .  
   StkLongBasedLit . 
   StkRealLit .
   StkLongRealLit .
   StkExtendedLit . 
   StkTextLit . 
   StkWideTextLit . 
   StkCharLit . 
   StkWideCharLit .
   StkLexErrChars .
   StkPragmaId . (* Not a known pragma ident, but found where one is expected. *)
   
   (* The scanner will recognize predefined ids in interfaces that have special
      treatment by the compiler and reserved ids using the same lex machine as
      reserved words, but treat each as an identifier whose atom id is actually
      the negated source token code. 
   *) 

   TokMinReservedId    "<TokMinPredef>"

   (* Reserved identifiers: *)
   RidNull             "<RidNull>" . (* Scanner will never present this. *) 
   RidABS              "ABS" . 
   RidADDRESS          "ADDRESS" . 
   RidADR              "ADR" . 
   RidADRSIZE          "ADRSIZE" . 
   RidBITSIZE          "BITSIZE" . 
   RidBOOLEAN          "BOOLEAN" . 
   RidBYTESIZE         "BYTESIZE" . 
   RidCARDINAL         "CARDINAL" . 
   RidCEILING          "CEILING" . 
   RidCHAR             "CHAR" . 
   RidDEC              "DEC" . 
   RidDISPOSE          "DISPOSE" . 
   RidEXTENDED         "EXTENDED" . 
   RidFALSE            "FALSE" . 
   RidFIRST            "FIRST" . 
   RidFLOAT            "FLOAT" . 
   RidFLOOR            "FLOOR" . 
   RidINC              "INC" . 
   RidINTEGER          "INTEGER" . 
   RidISTYPE           "ISTYPE" . 
   RidLAST             "LAST" . 
   RidLONGCARD         "LONGCARD" . 
   RidLONGINT          "LONGINT" . 
   RidLONGREAL         "LONGREAL" . 
   RidLOOPHOLE         "LOOPHOLE" . 
   RidMAX              "MAX" . 
   RidMIN              "MIN" . 
   RidMUTEX            "MUTEX" . 
   RidNARROW           "NARROW" . 
   RidNEW              "NEW" . 
   RidNIL              "NIL" . 
   RidNULL             "NULL" . 
   RidNUMBER           "NUMBER" . 
   RidORD              "ORD" . 
   RidREAL             "REAL" . 
   RidREFANY           "REFANY" . 
   RidROUND            "ROUND" . 
   RidSUBARRAY         "SUBARRAY" . 
   RidTEXT             "TEXT" . 
   RidTRUE             "TRUE" . 
   RidTRUNC            "TRUNC" . 
   RidTYPECODE         "TYPECODE" . 
   RidVAL              "VAL" .
   RidWIDECHAR         "WIDECHAR" .

   (* These behave semantically like reserved identifiers, but each occurs in
      a different set of syntactic contexts from identifiers, so they are
      source-code reserved words.  We convert those after parsing into
      reserved idents with the following Rid atoms.
   *)
   
   RidROOT             "<ROOT>" .
   RidUNTRACEDROOT     "<UNTRACED_ROOT>" .

   TokMaxReservedId    "<MaxReservedId>"

   TokMinPredef         "<TokMinPredef>"
   
   (* Idents in Word and Long. *) 
   (* These, when negated, serve as pseudo-identifier atoms and
      pseudo-declaration numbers in both Word and Long interfaces.
      They are also context-independent operation codes in Word, but Long
      has a separate but parallel operation code numbering, generated
      by FM3LongToks. 
      These must be equivalent names in the same order as corresponding names
      in FM3SrcToks.gentok.
   *)

   Word_T              "T" . 
   Word_Size           "Size" . 
   Word_Plus           "Plus" . 
   Word_Times          "Times" . 
   Word_Minus          "Minus" . 
   Word_Divide         "Divide" . 
   Word_Mod            "Mod" . 
   Word_LT             "LT" . 
   Word_LE             "LE" . 
   Word_GT             "GT" . 
   Word_GE             "GE" . 
   Word_And            "And" . 
   Word_Or             "Or" . 
   Word_Xor            "Xor" . 
   Word_Not            "Not" . 
   Word_Shift          "Shift" . 
   Word_LeftShift      "LeftShift" . 
   Word_RightShift     "RightShift" . 
   Word_Rotate         "Rotate" . 
   Word_LeftRotate     "LeftRotate" . 
   Word_RightRotate    "RightRotate" . 
   Word_Extract        "Extract" . 
   Word_Insert         "Insert" . 

   (* Decl numbers and operation numbers in Long only. *)
   REL 5
   Long_T              "Long.T" . 
   Long_Size           "Long.Size" . 
   Long_Plus           "Long.Plus" . 
   Long_Times          "Long.Times" . 
   Long_Minus          "Long.Minus" . 
   Long_Divide         "Long.Divide" . 
   Long_Mod            "Long.Mod" . 
   Long_LT             "Long.LT" . 
   Long_LE             "Long.LE" . 
   Long_GT             "Long.GT" . 
   Long_GE             "Long.GE" . 
   Long_And            "Long.And" . 
   Long_Or             "Long.Or" . 
   Long_Xor            "Long.Xor" . 
   Long_Not            "Long.Not" . 
   Long_Shift          "Long.Shift" . 
   Long_LeftShift      "Long.LeftShift" . 
   Long_RightShift     "Long.RightShift" . 
   Long_Rotate         "Long.Rotate" . 
   Long_LeftRotate     "Long.LeftRotate" . 
   Long_RightRotate    "Long.RightRotate" . 
   Long_Extract        "Long.Extract" . 
   Long_Insert         "Long.Insert" . 

   TokMaxPredef        "<TokMaxPredef>" .

   (* These are only used as operator codes.  Scanner won't deliver them
      and parser wouldn't parse them if it did. *) 
   StkUnaryPlus        "\XFF"
   StkUnaryMinus       "\XFF"

(* End of FM3SrcToks.gentok. *) 
