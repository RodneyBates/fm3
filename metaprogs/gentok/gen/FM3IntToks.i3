
(* -----------------------------------------------------------------------1- *)
(* This file is part of the FM3 Modula-3 compiler.                           *)
(* Copyright 2023..2024  Rodney M. Bates.                                    *)
(* rodney.m.bates@acm.org                                                    *)
(* Licensed under the MIT License.                                           *)
(* -----------------------------------------------------------------------2- *)

(* This file was generated by FM3's GenTok metaprogram,
   from input file "FM3IntToks.gentok", with command line 
     "./gentok -T -t -c -n -o FM3IntToks.gentok". *)

INTERFACE FM3IntToks

; IMPORT IntSets

; TYPE TokTyp = INTEGER 

; PROCEDURE Name ( TokNo : TokTyp ) : TEXT 

; PROCEDURE Operands ( TokNo : TokTyp ) : TEXT 

; VAR TokSetTemp : IntSets . T

; VAR TokSetPatch : IntSets . T

; VAR TokSetW1Arg : IntSets . T
   (* ^At least one argument. *)

; VAR TokSetArgs : IntSets . T
   (* ^At least two arguments. *)

; CONST LtToTemp = 1
        (* ^Add this to Lt tokcode to get corresponding LtTemp tokcode. *)
; CONST LtToPatch = 2 
        (* ^Add this to Lt tokcode to get corresponding LtPatch tokcode. *)
; CONST LtToRt = 3    
        (* ^Add this to Lt tokcode to get corresponding Rt tokcode. *)
; CONST LtToOne = 4    
        (* ^Add this to Lt tokcode to get LM Infix tokcode. *)
; CONST LtToOnePatch = 6    
        (* ^Add this to Lt tokcode to get LM Infix patch tokcode. *)
; CONST LtToTwo = 7    
        (* ^Add this to Lt tokcode to get 2nd Infix tokcode. *)
; CONST LtToTwoPatch = 9    
        (* ^Add this to Lt tokcode to get 2nd Infix patch tokcode. *)
; CONST LtToListSep = 4    
        (* ^Add this to list Lt tokcode to get Sep tokcode. *)
; CONST LtToListSepPatch = 6    
        (* ^Add this to list Lt tokcode to get SepPatch tokcode. *)
; CONST LtToListElem = 7    
        (* ^Add this to list Lt tokcode to get ListElem tokcode. *)
; CONST RtToLt = - 3    
        (* ^Add this to Rt tokcode to get corresponding Lt tokcode. *)
; CONST RtToTemp = - 2    
        (* ^Add this to Rt tokcode to get corresponding LtTemp tokcode. *)
; CONST RtToPatch = - 1    
        (* ^Add this to Rt tokcode to get corresponding LtPatch tokcode. *)

(* ^Be sure not to overlap the source tokens! *)
(* Being low-numbered, these will read and write either forward
   or backward, without value change.
*)
(* ABS 160: *)

; CONST TkMinTok                                     =   160

(* LONE ItkNull: *)
; CONST ItkNull                         (*ArgCt: 0*) =   160 (*16_a0 01 *)
(* LONE ItkBOF: *)
; CONST ItkBOF                          (*ArgCt: 0*) =   161 (*16_a1 01 *)
(* LONE ItkEOF: *)
; CONST ItkEOF                          (*ArgCt: 0*) =   162 (*16_a2 01 *)
(* LONE ItkLeftEnd: *)
; CONST ItkLeftEnd                      (*ArgCt: 0*) =   163 (*16_a3 01 *)
(* LONE ItkRightEnd: *)
; CONST ItkRightEnd                     (*ArgCt: 0*) =   164 (*16_a4 01 *)
(* LONE ItkLeftEndIncomplete: *)
; CONST ItkLeftEndIncomplete            (*ArgCt: 0*) =   165 (*16_a5 01 *)
(* LONE ItkRightEndIncomplete: *)
; CONST ItkRightEndIncomplete           (*ArgCt: 0*) =   166 (*16_a6 01 *)
(* Unique Pair number. *)
(* FIXED ItkSkip: *)
; CONST ItkSkipLt                       (*ArgCt: 1*) =   167 (*16_a7 01 *)
; CONST ItkSkipLtTemp                   (*ArgCt: 1*) =   168 (*16_a8 01 *)
; CONST ItkSkipLtPatch                  (*ArgCt: 1*) =   169 (*16_a9 01 *)
; CONST ItkSkipRt                       (*ArgCt: 1*) =   170 (*16_aa 01 *)

(* UnitNo, Position. *)
(* FIXED ItkInterface: *)
; CONST ItkInterfaceLt                  (*ArgCt: 3*) =   171 (*16_ab 01 *)
; CONST ItkInterfaceLtTemp              (*ArgCt: 3*) =   172 (*16_ac 01 *)
; CONST ItkInterfaceLtPatch             (*ArgCt: 3*) =   173 (*16_ad 01 *)
; CONST ItkInterfaceRt                  (*ArgCt: 3*) =   174 (*16_ae 01 *)

(* UnitNo, Position. *)
(* FIXED ItkModule: *)
; CONST ItkModuleLt                     (*ArgCt: 3*) =   175 (*16_af 01 *)
; CONST ItkModuleLtTemp                 (*ArgCt: 3*) =   176 (*16_b0 01 *)
; CONST ItkModuleLtPatch                (*ArgCt: 3*) =   177 (*16_b1 01 *)
; CONST ItkModuleRt                     (*ArgCt: 3*) =   178 (*16_b2 01 *)

; CONST ItkModuleBegin                  (*ArgCt: 3*) =   179 (*16_b3 01 *)
; CONST ItkModuleBeginTemp              (*ArgCt: 3*) =   180 (*16_b4 01 *)
; CONST ItkModuleBeginPatch             (*ArgCt: 3*) =   181 (*16_b5 01 *)

(* IdAtom, Line, Column. *)
(* LONE ItkUnitId: *)
; CONST ItkUnitId                       (*ArgCt: 3*) =   182 (*16_b6 01 *)
(* LONE ItkFormalsListEmpty: *)
; CONST ItkFormalsListEmpty             (*ArgCt: 0*) =   183 (*16_b7 01 *)
(* Position. *)
(* LONE ItkFormalTypeAbsent: *)
; CONST ItkFormalTypeAbsent             (*ArgCt: 2*) =   184 (*16_b8 01 *)
(* Position. *)
(* LONE ItkFormalExprAbsent: *)
; CONST ItkFormalExprAbsent             (*ArgCt: 2*) =   185 (*16_b9 01 *)
(*ItkRaisesSetAbsent POS 2 (* Position. *) *)
(* Position. *)
(* LONE ItkRaisesANY: *)
; CONST ItkRaisesANY                    (*ArgCt: 2*) =   186 (*16_ba 01 *)
(* Position. *)
(* LONE ItkResultTypeAbsent: *)
; CONST ItkResultTypeAbsent             (*ArgCt: 2*) =   187 (*16_bb 01 *)
(* Position. *)
(* LONE ItkProcBodyAbsent: *)
; CONST ItkProcBodyAbsent               (*ArgCt: 2*) =   188 (*16_bc 01 *)
(* LONE ItkIdRefAtomNotUsable: *)
; CONST ItkIdRefAtomNotUsable           (*ArgCt: 3*) =   189 (*16_bd 01 *)
(* Scopes and declarations within. *)
(* ScopeNo. *)
(* LONE ItkScopeEmpty: *)
; CONST ItkScopeEmpty                   (*ArgCt: 1*) =   190 (*16_be 01 *)
(* ScopeNo. *)
(* LONE ItkDeclScopeLt: *)
; CONST ItkDeclScopeLt                  (*ArgCt: 1*) =   191 (*16_bf 01 *)
(* ScopeNo. *)
(* LONE ItkDeclScopeRt: *)
; CONST ItkDeclScopeRt                  (*ArgCt: 1*) =   192 (*16_c0 01 *)
(* ScopeNo. *)
(* LONE ItkOpenScopeLt: *)
; CONST ItkOpenScopeLt                  (*ArgCt: 1*) =   193 (*16_c1 01 *)
(* ScopeNo. *)
(* LONE ItkOpenScopeRt: *)
; CONST ItkOpenScopeRt                  (*ArgCt: 1*) =   194 (*16_c2 01 *)
(* Rid*, Position. *)
(* LONE ItkReservedId: *)
; CONST ItkReservedId                   (*ArgCt: 3*) =   195 (*16_c3 01 *)
(* IdAtom, position *)
(* LONE ItkDuplDeclId: *)
; CONST ItkDuplDeclId                   (*ArgCt: 3*) =   196 (*16_c4 01 *)
(* DeclKind, IdAtom, position *)
(* LONE ItkDeclId: *)
; CONST ItkDeclId                       (*ArgCt: 4*) =   197 (*16_c5 01 *)
(* DeclNo, position *)
(* LONE ItkDeclNo: *)
; CONST ItkDeclNo                       (*ArgCt: 3*) =   198 (*16_c6 01 *)
(* Identifier references. *)
(* IdAtom, position. Occurs before pass2. *)
(* LONE ItkIdRefAtom: *)
; CONST ItkIdRefAtom                    (*ArgCt: 3*) =   199 (*16_c7 01 *)
(* DeclNo, position. Occurs after pass2. *)
(* LONE ItkIdRefDeclNo: *)
; CONST ItkIdRefDeclNo                  (*ArgCt: 3*) =   200 (*16_c8 01 *)
(* UnitNo, DeclNo, position. *)
(* Occurs after pass2. *)
(* LONE ItkIdRefUnitNoDeclNo: *)
; CONST ItkIdRefUnitNoDeclNo            (*ArgCt: 4*) =   201 (*16_c9 01 *)
(* UnitNo, DeclNo, Position.  Occurs after pass 2. *)
(* LONE ItkExpImpRef: *)
; CONST ItkExpImpRef                    (*ArgCt: 4*) =   202 (*16_ca 01 *)
(* Lt & Rt Id atoms. *)
(* LONE ItkQualIdAtoms: *)
; CONST ItkQualIdAtoms                  (*ArgCt: 6*) =   203 (*16_cb 01 *)
(* Lt decl no, Rt id atom. *)
(* LONE ItkQualIdDeclNoAtom: *)
; CONST ItkQualIdDeclNoAtom             (*ArgCt: 6*) =   204 (*16_cc 01 *)
(* Lt & Rt decl nos. *)
(* LONE ItkQualIdDeclNos: *)
; CONST ItkQualIdDeclNos                (*ArgCt: 6*) =   205 (*16_cd 01 *)
(* Lt UnitNo, Rt declNo. *)
(* LONE ItkQualIdUnitNoDeclNo: *)
; CONST ItkQualIdUnitNoDeclNo           (*ArgCt: 6*) =   206 (*16_ce 01 *)
(* LONE ItkInvalidRef: *)
; CONST ItkInvalidRef                   (*ArgCt: 2*) =   207 (*16_cf 01 *)
(* Position. *)
(* FIXED ItkSignatureProper: *)
; CONST ItkSignatureProperLt            (*ArgCt: 2*) =   208 (*16_d0 01 *)
; CONST ItkSignatureProperLtTemp        (*ArgCt: 2*) =   209 (*16_d1 01 *)
; CONST ItkSignatureProperLtPatch       (*ArgCt: 2*) =   210 (*16_d2 01 *)
; CONST ItkSignatureProperRt            (*ArgCt: 2*) =   211 (*16_d3 01 *)

(* Position. *)
(* FIXED ItkSignatureFunc: *)
; CONST ItkSignatureFuncLt              (*ArgCt: 2*) =   212 (*16_d4 01 *)
; CONST ItkSignatureFuncLtTemp          (*ArgCt: 2*) =   213 (*16_d5 01 *)
; CONST ItkSignatureFuncLtPatch         (*ArgCt: 2*) =   214 (*16_d6 01 *)
; CONST ItkSignatureFuncRt              (*ArgCt: 2*) =   215 (*16_d7 01 *)

(* Position. *)
(* FIXED ItkMethodDecl: *)
; CONST ItkMethodDeclLt                 (*ArgCt: 3*) =   216 (*16_d8 01 *)
; CONST ItkMethodDeclLtTemp             (*ArgCt: 3*) =   217 (*16_d9 01 *)
; CONST ItkMethodDeclLtPatch            (*ArgCt: 3*) =   218 (*16_da 01 *)
; CONST ItkMethodDeclRt                 (*ArgCt: 3*) =   219 (*16_db 01 *)

(* Position of colon. *)
(* FIXED ItkFormalType: *)
; CONST ItkFormalTypeLt                 (*ArgCt: 2*) =   220 (*16_dc 01 *)
; CONST ItkFormalTypeLtTemp             (*ArgCt: 2*) =   221 (*16_dd 01 *)
; CONST ItkFormalTypeLtPatch            (*ArgCt: 2*) =   222 (*16_de 01 *)
; CONST ItkFormalTypeRt                 (*ArgCt: 2*) =   223 (*16_df 01 *)

(* Position of ":=" *)
(* FIXED ItkFormalExpr: *)
; CONST ItkFormalExprLt                 (*ArgCt: 2*) =   224 (*16_e0 01 *)
; CONST ItkFormalExprLtTemp             (*ArgCt: 2*) =   225 (*16_e1 01 *)
; CONST ItkFormalExprLtPatch            (*ArgCt: 2*) =   226 (*16_e2 01 *)
; CONST ItkFormalExprRt                 (*ArgCt: 2*) =   227 (*16_e3 01 *)

(* Position of colon. *)
(* FIXED ItkResultType: *)
; CONST ItkResultTypeLt                 (*ArgCt: 2*) =   228 (*16_e4 01 *)
; CONST ItkResultTypeLtTemp             (*ArgCt: 2*) =   229 (*16_e5 01 *)
; CONST ItkResultTypeLtPatch            (*ArgCt: 2*) =   230 (*16_e6 01 *)
; CONST ItkResultTypeRt                 (*ArgCt: 2*) =   231 (*16_e7 01 *)

(* list count. Position of RAISES. *)
(* FIXED ItkRaisesSet: *)
; CONST ItkRaisesSetLt                  (*ArgCt: 3*) =   232 (*16_e8 01 *)
; CONST ItkRaisesSetLtTemp              (*ArgCt: 3*) =   233 (*16_e9 01 *)
; CONST ItkRaisesSetLtPatch             (*ArgCt: 3*) =   234 (*16_ea 01 *)
; CONST ItkRaisesSetRt                  (*ArgCt: 3*) =   235 (*16_eb 01 *)

(* Atom of signature. *)
(* FIXED ItkProcNoBody: *)
; CONST ItkProcNoBodyLt                 (*ArgCt: 1*) =   236 (*16_ec 01 *)
; CONST ItkProcNoBodyLtTemp             (*ArgCt: 1*) =   237 (*16_ed 01 *)
; CONST ItkProcNoBodyLtPatch            (*ArgCt: 1*) =   238 (*16_ee 01 *)
; CONST ItkProcNoBodyRt                 (*ArgCt: 1*) =   239 (*16_ef 01 *)

(* Atom of signature. *)
(* FIXED ItkProcWBody: *)
; CONST ItkProcWBodyLt                  (*ArgCt: 1*) =   240 (*16_f0 01 *)
; CONST ItkProcWBodyLtTemp              (*ArgCt: 1*) =   241 (*16_f1 01 *)
; CONST ItkProcWBodyLtPatch             (*ArgCt: 1*) =   242 (*16_f2 01 *)
; CONST ItkProcWBodyRt                  (*ArgCt: 1*) =   243 (*16_f3 01 *)

(* Position of equal sign. *)
(* FIXED ItkProcBody: *)
; CONST ItkProcBodyLt                   (*ArgCt: 2*) =   244 (*16_f4 01 *)
; CONST ItkProcBodyLtTemp               (*ArgCt: 2*) =   245 (*16_f5 01 *)
; CONST ItkProcBodyLtPatch              (*ArgCt: 2*) =   246 (*16_f6 01 *)
; CONST ItkProcBodyRt                   (*ArgCt: 2*) =   247 (*16_f7 01 *)

(* Position of "PROCEDURE". *)
(* FIXED ItkProcType: *)
; CONST ItkProcTypeLt                   (*ArgCt: 2*) =   248 (*16_f8 01 *)
; CONST ItkProcTypeLtTemp               (*ArgCt: 2*) =   249 (*16_f9 01 *)
; CONST ItkProcTypeLtPatch              (*ArgCt: 2*) =   250 (*16_fa 01 *)
; CONST ItkProcTypeRt                   (*ArgCt: 2*) =   251 (*16_fb 01 *)

(* Position of equal sign. *)
(* FIXED ItkOverride: *)
; CONST ItkOverrideLt                   (*ArgCt: 2*) =   252 (*16_fc 01 *)
; CONST ItkOverrideLtTemp               (*ArgCt: 2*) =   253 (*16_fd 01 *)
; CONST ItkOverrideLtPatch              (*ArgCt: 2*) =   254 (*16_fe 01 *)
; CONST ItkOverrideRt                   (*ArgCt: 2*) =   255 (*16_ff 01 *)

; CONST ItkOverrideEquals               (*ArgCt: 2*) =   256 (*16_80 02 *)
; CONST ItkOverrideEqualsTemp           (*ArgCt: 2*) =   257 (*16_81 02 *)
; CONST ItkOverrideEqualsPatch          (*ArgCt: 2*) =   258 (*16_82 02 *)

(* Construct no., Position of LM declaration. *)
(* FIXED ItkBlock: *)
; CONST ItkBlockLt                      (*ArgCt: 3*) =   259 (*16_83 02 *)
; CONST ItkBlockLtTemp                  (*ArgCt: 3*) =   260 (*16_84 02 *)
; CONST ItkBlockLtPatch                 (*ArgCt: 3*) =   261 (*16_85 02 *)
; CONST ItkBlockRt                      (*ArgCt: 3*) =   262 (*16_86 02 *)

(* Construct no.,Position of BEGIN. *)
; CONST ItkBlockBEGIN                   (*ArgCt: 3*) =   263 (*16_87 02 *)
; CONST ItkBlockBEGINTemp               (*ArgCt: 3*) =   264 (*16_88 02 *)
; CONST ItkBlockBEGINPatch              (*ArgCt: 3*) =   265 (*16_89 02 *)

(* Type decls. *)
(* All replaced by ItkDeclId:   
LONE
ItkTypeDeclId IDENT POS 3 .
ItkRevealId IDENT POS 3 . 
ItkConstId IDENT POS 3 . 
*)
(* FIXED ItkConstDecl: *)
; CONST ItkConstDeclLt                  (*ArgCt: 2*) =   266 (*16_8a 02 *)
; CONST ItkConstDeclLtTemp              (*ArgCt: 2*) =   267 (*16_8b 02 *)
; CONST ItkConstDeclLtPatch             (*ArgCt: 2*) =   268 (*16_8c 02 *)
; CONST ItkConstDeclRt                  (*ArgCt: 2*) =   269 (*16_8d 02 *)

; CONST ItkConstDeclColon               (*ArgCt: 3*) =   270 (*16_8e 02 *)
; CONST ItkConstDeclColonTemp           (*ArgCt: 3*) =   271 (*16_8f 02 *)
; CONST ItkConstDeclColonPatch          (*ArgCt: 3*) =   272 (*16_90 02 *)

; CONST ItkConstDeclEquals              (*ArgCt: 2*) =   273 (*16_91 02 *)
; CONST ItkConstDeclEqualsTemp          (*ArgCt: 2*) =   274 (*16_92 02 *)
; CONST ItkConstDeclEqualsPatch         (*ArgCt: 2*) =   275 (*16_93 02 *)

(* Position of ident. *)
(* FIXED ItkTypeDecl: *)
; CONST ItkTypeDeclLt                   (*ArgCt: 2*) =   276 (*16_94 02 *)
; CONST ItkTypeDeclLtTemp               (*ArgCt: 2*) =   277 (*16_95 02 *)
; CONST ItkTypeDeclLtPatch              (*ArgCt: 2*) =   278 (*16_96 02 *)
; CONST ItkTypeDeclRt                   (*ArgCt: 2*) =   279 (*16_97 02 *)

; CONST ItkTypeDeclEquals               (*ArgCt: 2*) =   280 (*16_98 02 *)
; CONST ItkTypeDeclEqualsTemp           (*ArgCt: 2*) =   281 (*16_99 02 *)
; CONST ItkTypeDeclEqualsPatch          (*ArgCt: 2*) =   282 (*16_9a 02 *)

(* Position of ident (Lt). *)
(* FIXED ItkSubtypeDecl: *)
; CONST ItkSubtypeDeclLt                (*ArgCt: 2*) =   283 (*16_9b 02 *)
; CONST ItkSubtypeDeclLtTemp            (*ArgCt: 2*) =   284 (*16_9c 02 *)
; CONST ItkSubtypeDeclLtPatch           (*ArgCt: 2*) =   285 (*16_9d 02 *)
; CONST ItkSubtypeDeclRt                (*ArgCt: 2*) =   286 (*16_9e 02 *)

; CONST ItkSubtypeDeclSubtype           (*ArgCt: 2*) =   287 (*16_9f 02 *)
; CONST ItkSubtypeDeclSubtypeTemp       (*ArgCt: 2*) =   288 (*16_a0 02 *)
; CONST ItkSubtypeDeclSubtypePatch      (*ArgCt: 2*) =   289 (*16_a1 02 *)

(* Position of ident. *)
(* FIXED ItkFullReveal: *)
; CONST ItkFullRevealLt                 (*ArgCt: 2*) =   290 (*16_a2 02 *)
; CONST ItkFullRevealLtTemp             (*ArgCt: 2*) =   291 (*16_a3 02 *)
; CONST ItkFullRevealLtPatch            (*ArgCt: 2*) =   292 (*16_a4 02 *)
; CONST ItkFullRevealRt                 (*ArgCt: 2*) =   293 (*16_a5 02 *)

; CONST ItkFullRevealEquals             (*ArgCt: 2*) =   294 (*16_a6 02 *)
; CONST ItkFullRevealEqualsTemp         (*ArgCt: 2*) =   295 (*16_a7 02 *)
; CONST ItkFullRevealEqualsPatch        (*ArgCt: 2*) =   296 (*16_a8 02 *)

(* Position of ident. *)
(* FIXED ItkPartialReveal: *)
; CONST ItkPartialRevealLt              (*ArgCt: 2*) =   297 (*16_a9 02 *)
; CONST ItkPartialRevealLtTemp          (*ArgCt: 2*) =   298 (*16_aa 02 *)
; CONST ItkPartialRevealLtPatch         (*ArgCt: 2*) =   299 (*16_ab 02 *)
; CONST ItkPartialRevealRt              (*ArgCt: 2*) =   300 (*16_ac 02 *)

; CONST ItkPartialRevealSubtype         (*ArgCt: 2*) =   301 (*16_ad 02 *)
; CONST ItkPartialRevealSubtypeTemp     (*ArgCt: 2*) =   302 (*16_ae 02 *)
; CONST ItkPartialRevealSubtypePatch    (*ArgCt: 2*) =   303 (*16_af 02 *)

(* Position of ident. *)
(* FIXED ItkExceptionDecl: *)
; CONST ItkExceptionDeclLt              (*ArgCt: 2*) =   304 (*16_b0 02 *)
; CONST ItkExceptionDeclLtTemp          (*ArgCt: 2*) =   305 (*16_b1 02 *)
; CONST ItkExceptionDeclLtPatch         (*ArgCt: 2*) =   306 (*16_b2 02 *)
; CONST ItkExceptionDeclRt              (*ArgCt: 2*) =   307 (*16_b3 02 *)

; CONST ItkExceptionDeclLONE            (*ArgCt: 0*) =   308 (*16_b4 02 *)
; CONST ItkExceptionDeclLONETemp        (*ArgCt: 0*) =   309 (*16_b5 02 *)
; CONST ItkExceptionDeclLONEPatch       (*ArgCt: 0*) =   310 (*16_b6 02 *)

(* To suppress derived errors. *)
; CONST ItkExceptionDeclItkInvalidType  (*ArgCt: 2*) =   311 (*16_b7 02 *)
; CONST ItkExceptionDeclItkInvalidTypeTemp(*ArgCt: 2*) =   312 (*16_b8 02 *)
; CONST ItkExceptionDeclItkInvalidTypePatch(*ArgCt: 2*) =   313 (*16_b9 02 *)

(*
LONE
ItkVarDeclId     IDENT POS . 
ItkRecFieldId    IDENT POS . 
ItkVALUEFormalId IDENT POS . 
ItkVARFormalId   IDENT POS . 
ItkROFormalId    IDENT POS . 
*)
(* FIXED ItkREFType: *)
; CONST ItkREFTypeLt                    (*ArgCt: 2*) =   314 (*16_ba 02 *)
; CONST ItkREFTypeLtTemp                (*ArgCt: 2*) =   315 (*16_bb 02 *)
; CONST ItkREFTypeLtPatch               (*ArgCt: 2*) =   316 (*16_bc 02 *)
; CONST ItkREFTypeRt                    (*ArgCt: 2*) =   317 (*16_bd 02 *)

(* FIXED ItkSubrType: *)
; CONST ItkSubrTypeLt                   (*ArgCt: 2*) =   318 (*16_be 02 *)
; CONST ItkSubrTypeLtTemp               (*ArgCt: 2*) =   319 (*16_bf 02 *)
; CONST ItkSubrTypeLtPatch              (*ArgCt: 2*) =   320 (*16_c0 02 *)
; CONST ItkSubrTypeRt                   (*ArgCt: 2*) =   321 (*16_c1 02 *)

; CONST ItkSubrTypeDotDot               (*ArgCt: 2*) =   322 (*16_c2 02 *)
; CONST ItkSubrTypeDotDotTemp           (*ArgCt: 2*) =   323 (*16_c3 02 *)
; CONST ItkSubrTypeDotDotPatch          (*ArgCt: 2*) =   324 (*16_c4 02 *)

(* Record type definitions. *)
(* field count, Position of RECORD, field count. *)
(* FIXED ItkRecType: *)
; CONST ItkRecTypeLt                    (*ArgCt: 3*) =   325 (*16_c5 02 *)
; CONST ItkRecTypeLtTemp                (*ArgCt: 3*) =   326 (*16_c6 02 *)
; CONST ItkRecTypeLtPatch               (*ArgCt: 3*) =   327 (*16_c7 02 *)
; CONST ItkRecTypeRt                    (*ArgCt: 3*) =   328 (*16_c8 02 *)

(* Enumeration type definitions. *)
(* field count, Position of RECORD, field count. *)
(* FIXED ItkEnumType: *)
; CONST ItkEnumTypeLt                   (*ArgCt: 3*) =   329 (*16_c9 02 *)
; CONST ItkEnumTypeLtTemp               (*ArgCt: 3*) =   330 (*16_ca 02 *)
; CONST ItkEnumTypeLtPatch              (*ArgCt: 3*) =   331 (*16_cb 02 *)
; CONST ItkEnumTypeRt                   (*ArgCt: 3*) =   332 (*16_cc 02 *)

(* Object types. *)
(* Position of OBJECT. *)
(* FIXED ItkObjType: *)
; CONST ItkObjTypeLt                    (*ArgCt: 2*) =   333 (*16_cd 02 *)
; CONST ItkObjTypeLtTemp                (*ArgCt: 2*) =   334 (*16_ce 02 *)
; CONST ItkObjTypeLtPatch               (*ArgCt: 2*) =   335 (*16_cf 02 *)
; CONST ItkObjTypeRt                    (*ArgCt: 2*) =   336 (*16_d0 02 *)

(* Position of OBJECT. *)
(* FIXED ItkSupertype: *)
; CONST ItkSupertypeLt                  (*ArgCt: 2*) =   337 (*16_d1 02 *)
; CONST ItkSupertypeLtTemp              (*ArgCt: 2*) =   338 (*16_d2 02 *)
; CONST ItkSupertypeLtPatch             (*ArgCt: 2*) =   339 (*16_d3 02 *)
; CONST ItkSupertypeRt                  (*ArgCt: 2*) =   340 (*16_d4 02 *)

(* With explicit brand value. *)
(* FIXED ItkBrand: *)
; CONST ItkBrandLt                      (*ArgCt: 2*) =   341 (*16_d5 02 *)
; CONST ItkBrandLtTemp                  (*ArgCt: 2*) =   342 (*16_d6 02 *)
; CONST ItkBrandLtPatch                 (*ArgCt: 2*) =   343 (*16_d7 02 *)
; CONST ItkBrandRt                      (*ArgCt: 2*) =   344 (*16_d8 02 *)

(* LONE ItkAbsentSupertype: *)
; CONST ItkAbsentSupertype              (*ArgCt: 2*) =   345 (*16_d9 02 *)
(* LONE ItkAbsentBrand: *)
; CONST ItkAbsentBrand                  (*ArgCt: 2*) =   346 (*16_da 02 *)
(* anonymous brand value. *)
(* LONE ItkBrandAnon: *)
; CONST ItkBrandAnon                    (*ArgCt: 2*) =   347 (*16_db 02 *)
(* This suffices to delimit an enumeration type. *)
(* LIST ItkEnumLitList: *)
; CONST ItkEnumLitListLt                (*ArgCt: 3*) =   348 (*16_dc 02 *)
; CONST ItkEnumLitListLtTemp            (*ArgCt: 3*) =   349 (*16_dd 02 *)
; CONST ItkEnumLitListLtPatch           (*ArgCt: 3*) =   350 (*16_de 02 *)
; CONST ItkEnumLitListRt                (*ArgCt: 3*) =   351 (*16_df 02 *)

; CONST ItkEnumLitListSep               (*ArgCt: 3*) =   352 (*16_e0 02 *)
; CONST ItkEnumLitListSepTemp           (*ArgCt: 3*) =   353 (*16_e1 02 *)
; CONST ItkEnumLitListSepPatch          (*ArgCt: 3*) =   354 (*16_e2 02 *)

; CONST ItkEnumLitListElem              (*ArgCt: 3*) =   355 (*16_e3 02 *)

(* LIST ItkFieldDeclList: *)
; CONST ItkFieldDeclListLt              (*ArgCt: 3*) =   356 (*16_e4 02 *)
; CONST ItkFieldDeclListLtTemp          (*ArgCt: 3*) =   357 (*16_e5 02 *)
; CONST ItkFieldDeclListLtPatch         (*ArgCt: 3*) =   358 (*16_e6 02 *)
; CONST ItkFieldDeclListRt              (*ArgCt: 3*) =   359 (*16_e7 02 *)

; CONST ItkFieldDeclListSep             (*ArgCt: 3*) =   360 (*16_e8 02 *)
; CONST ItkFieldDeclListSepTemp         (*ArgCt: 3*) =   361 (*16_e9 02 *)
; CONST ItkFieldDeclListSepPatch        (*ArgCt: 3*) =   362 (*16_ea 02 *)

; CONST ItkFieldDeclListElem            (*ArgCt: 3*) =   363 (*16_eb 02 *)

(* LIST ItkVarDeclList: *)
; CONST ItkVarDeclListLt                (*ArgCt: 3*) =   364 (*16_ec 02 *)
; CONST ItkVarDeclListLtTemp            (*ArgCt: 3*) =   365 (*16_ed 02 *)
; CONST ItkVarDeclListLtPatch           (*ArgCt: 3*) =   366 (*16_ee 02 *)
; CONST ItkVarDeclListRt                (*ArgCt: 3*) =   367 (*16_ef 02 *)

; CONST ItkVarDeclListSep               (*ArgCt: 3*) =   368 (*16_f0 02 *)
; CONST ItkVarDeclListSepTemp           (*ArgCt: 3*) =   369 (*16_f1 02 *)
; CONST ItkVarDeclListSepPatch          (*ArgCt: 3*) =   370 (*16_f2 02 *)

; CONST ItkVarDeclListElem              (*ArgCt: 3*) =   371 (*16_f3 02 *)

(* LIST ItkTypeDeclList: *)
; CONST ItkTypeDeclListLt               (*ArgCt: 3*) =   372 (*16_f4 02 *)
; CONST ItkTypeDeclListLtTemp           (*ArgCt: 3*) =   373 (*16_f5 02 *)
; CONST ItkTypeDeclListLtPatch          (*ArgCt: 3*) =   374 (*16_f6 02 *)
; CONST ItkTypeDeclListRt               (*ArgCt: 3*) =   375 (*16_f7 02 *)

; CONST ItkTypeDeclListSep              (*ArgCt: 3*) =   376 (*16_f8 02 *)
; CONST ItkTypeDeclListSepTemp          (*ArgCt: 3*) =   377 (*16_f9 02 *)
; CONST ItkTypeDeclListSepPatch         (*ArgCt: 3*) =   378 (*16_fa 02 *)

; CONST ItkTypeDeclListElem             (*ArgCt: 3*) =   379 (*16_fb 02 *)

(* LIST ItkMethodDeclList: *)
; CONST ItkMethodDeclListLt             (*ArgCt: 3*) =   380 (*16_fc 02 *)
; CONST ItkMethodDeclListLtTemp         (*ArgCt: 3*) =   381 (*16_fd 02 *)
; CONST ItkMethodDeclListLtPatch        (*ArgCt: 3*) =   382 (*16_fe 02 *)
; CONST ItkMethodDeclListRt             (*ArgCt: 3*) =   383 (*16_ff 02 *)

; CONST ItkMethodDeclListSep            (*ArgCt: 3*) =   384 (*16_80 03 *)
; CONST ItkMethodDeclListSepTemp        (*ArgCt: 3*) =   385 (*16_81 03 *)
; CONST ItkMethodDeclListSepPatch       (*ArgCt: 3*) =   386 (*16_82 03 *)

; CONST ItkMethodDeclListElem           (*ArgCt: 3*) =   387 (*16_83 03 *)

(* LIST ItkOverrideList: *)
; CONST ItkOverrideListLt               (*ArgCt: 3*) =   388 (*16_84 03 *)
; CONST ItkOverrideListLtTemp           (*ArgCt: 3*) =   389 (*16_85 03 *)
; CONST ItkOverrideListLtPatch          (*ArgCt: 3*) =   390 (*16_86 03 *)
; CONST ItkOverrideListRt               (*ArgCt: 3*) =   391 (*16_87 03 *)

; CONST ItkOverrideListSep              (*ArgCt: 3*) =   392 (*16_88 03 *)
; CONST ItkOverrideListSepTemp          (*ArgCt: 3*) =   393 (*16_89 03 *)
; CONST ItkOverrideListSepPatch         (*ArgCt: 3*) =   394 (*16_8a 03 *)

; CONST ItkOverrideListElem             (*ArgCt: 3*) =   395 (*16_8b 03 *)

(* One field decl, with possibly multiple idents. *)
(* Position of LM ident (Lt) or position of semicolon (Rt). *)
(* FIXED ItkFieldDecl: *)
; CONST ItkFieldDeclLt                  (*ArgCt: 2*) =   396 (*16_8c 03 *)
; CONST ItkFieldDeclLtTemp              (*ArgCt: 2*) =   397 (*16_8d 03 *)
; CONST ItkFieldDeclLtPatch             (*ArgCt: 2*) =   398 (*16_8e 03 *)
; CONST ItkFieldDeclRt                  (*ArgCt: 2*) =   399 (*16_8f 03 *)

(* Position of colon. *)
; CONST ItkFieldDeclType                (*ArgCt: 2*) =   400 (*16_90 03 *)
; CONST ItkFieldDeclTypeTemp            (*ArgCt: 2*) =   401 (*16_91 03 *)
; CONST ItkFieldDeclTypePatch           (*ArgCt: 2*) =   402 (*16_92 03 *)

(* Position of becomes. *)
; CONST ItkFieldDeclVal                 (*ArgCt: 2*) =   403 (*16_93 03 *)
; CONST ItkFieldDeclValTemp             (*ArgCt: 2*) =   404 (*16_94 03 *)
; CONST ItkFieldDeclValPatch            (*ArgCt: 2*) =   405 (*16_95 03 *)

(* One variable decl, with possibly multiple idents. *)
(* Position of LM ident (Lt) or position of semicolon (Rt). *)
(* FIXED ItkVarDecl: *)
; CONST ItkVarDeclLt                    (*ArgCt: 2*) =   406 (*16_96 03 *)
; CONST ItkVarDeclLtTemp                (*ArgCt: 2*) =   407 (*16_97 03 *)
; CONST ItkVarDeclLtPatch               (*ArgCt: 2*) =   408 (*16_98 03 *)
; CONST ItkVarDeclRt                    (*ArgCt: 2*) =   409 (*16_99 03 *)

(* Position of colon. *)
; CONST ItkVarDeclType                  (*ArgCt: 2*) =   410 (*16_9a 03 *)
; CONST ItkVarDeclTypeTemp              (*ArgCt: 2*) =   411 (*16_9b 03 *)
; CONST ItkVarDeclTypePatch             (*ArgCt: 2*) =   412 (*16_9c 03 *)

(* Position of becomes. *)
; CONST ItkVarDeclVal                   (*ArgCt: 2*) =   413 (*16_9d 03 *)
; CONST ItkVarDeclValTemp               (*ArgCt: 2*) =   414 (*16_9e 03 *)
; CONST ItkVarDeclValPatch              (*ArgCt: 2*) =   415 (*16_9f 03 *)

(* LONE ItkDeclTypeAbsent: *)
; CONST ItkDeclTypeAbsent               (*ArgCt: 0*) =   416 (*16_a0 03 *)
(* LONE ItkDeclValAbsent: *)
; CONST ItkDeclValAbsent                (*ArgCt: 0*) =   417 (*16_a1 03 *)
(* One formal, with possibly multiple idents. *)
(* Position of LM ident (Lt) or of semicolon (Rt). *)
(* FIXED ItkVALUEFormal: *)
; CONST ItkVALUEFormalLt                (*ArgCt: 2*) =   418 (*16_a2 03 *)
; CONST ItkVALUEFormalLtTemp            (*ArgCt: 2*) =   419 (*16_a3 03 *)
; CONST ItkVALUEFormalLtPatch           (*ArgCt: 2*) =   420 (*16_a4 03 *)
; CONST ItkVALUEFormalRt                (*ArgCt: 2*) =   421 (*16_a5 03 *)

(* Position of colon. *)
; CONST ItkVALUEFormalType              (*ArgCt: 2*) =   422 (*16_a6 03 *)
; CONST ItkVALUEFormalTypeTemp          (*ArgCt: 2*) =   423 (*16_a7 03 *)
; CONST ItkVALUEFormalTypePatch         (*ArgCt: 2*) =   424 (*16_a8 03 *)

(* Position of becomes. *)
; CONST ItkVALUEFormalVal               (*ArgCt: 2*) =   425 (*16_a9 03 *)
; CONST ItkVALUEFormalValTemp           (*ArgCt: 2*) =   426 (*16_aa 03 *)
; CONST ItkVALUEFormalValPatch          (*ArgCt: 2*) =   427 (*16_ab 03 *)

(* One formal, with possibly multiple idents. *)
(* Position of LM ident (Lt) or of semicolon (Rt). *)
(* FIXED ItkVARFormal: *)
; CONST ItkVARFormalLt                  (*ArgCt: 2*) =   428 (*16_ac 03 *)
; CONST ItkVARFormalLtTemp              (*ArgCt: 2*) =   429 (*16_ad 03 *)
; CONST ItkVARFormalLtPatch             (*ArgCt: 2*) =   430 (*16_ae 03 *)
; CONST ItkVARFormalRt                  (*ArgCt: 2*) =   431 (*16_af 03 *)

(* Position of colon. *)
; CONST ItkVARFormalType                (*ArgCt: 2*) =   432 (*16_b0 03 *)
; CONST ItkVARFormalTypeTemp            (*ArgCt: 2*) =   433 (*16_b1 03 *)
; CONST ItkVARFormalTypePatch           (*ArgCt: 2*) =   434 (*16_b2 03 *)

(* Position of becomes. *)
; CONST ItkVARFormalVal                 (*ArgCt: 2*) =   435 (*16_b3 03 *)
; CONST ItkVARFormalValTemp             (*ArgCt: 2*) =   436 (*16_b4 03 *)
; CONST ItkVARFormalValPatch            (*ArgCt: 2*) =   437 (*16_b5 03 *)

(* One formal, with possibly multiple idents. *)
(* Position of LM ident (Lt) or of semicolon (Rt). *)
(* FIXED ItkROFormal: *)
; CONST ItkROFormalLt                   (*ArgCt: 2*) =   438 (*16_b6 03 *)
; CONST ItkROFormalLtTemp               (*ArgCt: 2*) =   439 (*16_b7 03 *)
; CONST ItkROFormalLtPatch              (*ArgCt: 2*) =   440 (*16_b8 03 *)
; CONST ItkROFormalRt                   (*ArgCt: 2*) =   441 (*16_b9 03 *)

(* Position of colon. *)
; CONST ItkROFormalType                 (*ArgCt: 2*) =   442 (*16_ba 03 *)
; CONST ItkROFormalTypeTemp             (*ArgCt: 2*) =   443 (*16_bb 03 *)
; CONST ItkROFormalTypePatch            (*ArgCt: 2*) =   444 (*16_bc 03 *)

(* Position of becomes, *)
; CONST ItkROFormalVal                  (*ArgCt: 2*) =   445 (*16_bd 03 *)
; CONST ItkROFormalValTemp              (*ArgCt: 2*) =   446 (*16_be 03 *)
; CONST ItkROFormalValPatch             (*ArgCt: 2*) =   447 (*16_bf 03 *)

(* GenTok implicitly gives list tokens:
     The usual patch coordinate, if it's a patch token.
     One integer operand for element count (Lt & Rt tokens)
       or, for separator tokens, number of elements to left.  
     Position.  For Lt & Rt, of what source token  depends on the list.
       For separators, of the source separator, or if none, beginning
       of element to right.
*)
(* Position is "(" *)
(* LIST ItkGenFormalIdList: *)
; CONST ItkGenFormalIdListLt            (*ArgCt: 3*) =   448 (*16_c0 03 *)
; CONST ItkGenFormalIdListLtTemp        (*ArgCt: 3*) =   449 (*16_c1 03 *)
; CONST ItkGenFormalIdListLtPatch       (*ArgCt: 3*) =   450 (*16_c2 03 *)
; CONST ItkGenFormalIdListRt            (*ArgCt: 3*) =   451 (*16_c3 03 *)

; CONST ItkGenFormalIdListSep           (*ArgCt: 3*) =   452 (*16_c4 03 *)
; CONST ItkGenFormalIdListSepTemp       (*ArgCt: 3*) =   453 (*16_c5 03 *)
; CONST ItkGenFormalIdListSepPatch      (*ArgCt: 3*) =   454 (*16_c6 03 *)

; CONST ItkGenFormalIdListElem          (*ArgCt: 3*) =   455 (*16_c7 03 *)

(* Position is "(" *)
(* LIST ItkGenActualIdList: *)
; CONST ItkGenActualIdListLt            (*ArgCt: 3*) =   456 (*16_c8 03 *)
; CONST ItkGenActualIdListLtTemp        (*ArgCt: 3*) =   457 (*16_c9 03 *)
; CONST ItkGenActualIdListLtPatch       (*ArgCt: 3*) =   458 (*16_ca 03 *)
; CONST ItkGenActualIdListRt            (*ArgCt: 3*) =   459 (*16_cb 03 *)

; CONST ItkGenActualIdListSep           (*ArgCt: 3*) =   460 (*16_cc 03 *)
; CONST ItkGenActualIdListSepTemp       (*ArgCt: 3*) =   461 (*16_cd 03 *)
; CONST ItkGenActualIdListSepPatch      (*ArgCt: 3*) =   462 (*16_ce 03 *)

; CONST ItkGenActualIdListElem          (*ArgCt: 3*) =   463 (*16_cf 03 *)

(* Position is is LM ident. *)
(* LIST ItkVarDeclIdList: *)
; CONST ItkVarDeclIdListLt              (*ArgCt: 3*) =   464 (*16_d0 03 *)
; CONST ItkVarDeclIdListLtTemp          (*ArgCt: 3*) =   465 (*16_d1 03 *)
; CONST ItkVarDeclIdListLtPatch         (*ArgCt: 3*) =   466 (*16_d2 03 *)
; CONST ItkVarDeclIdListRt              (*ArgCt: 3*) =   467 (*16_d3 03 *)

; CONST ItkVarDeclIdListSep             (*ArgCt: 3*) =   468 (*16_d4 03 *)
; CONST ItkVarDeclIdListSepTemp         (*ArgCt: 3*) =   469 (*16_d5 03 *)
; CONST ItkVarDeclIdListSepPatch        (*ArgCt: 3*) =   470 (*16_d6 03 *)

; CONST ItkVarDeclIdListElem            (*ArgCt: 3*) =   471 (*16_d7 03 *)

(* Position is LM ident . *)
(* LIST ItkTypeDeclIdList: *)
; CONST ItkTypeDeclIdListLt             (*ArgCt: 3*) =   472 (*16_d8 03 *)
; CONST ItkTypeDeclIdListLtTemp         (*ArgCt: 3*) =   473 (*16_d9 03 *)
; CONST ItkTypeDeclIdListLtPatch        (*ArgCt: 3*) =   474 (*16_da 03 *)
; CONST ItkTypeDeclIdListRt             (*ArgCt: 3*) =   475 (*16_db 03 *)

; CONST ItkTypeDeclIdListSep            (*ArgCt: 3*) =   476 (*16_dc 03 *)
; CONST ItkTypeDeclIdListSepTemp        (*ArgCt: 3*) =   477 (*16_dd 03 *)
; CONST ItkTypeDeclIdListSepPatch       (*ArgCt: 3*) =   478 (*16_de 03 *)

; CONST ItkTypeDeclIdListElem           (*ArgCt: 3*) =   479 (*16_df 03 *)

(* Position is LM ident . *)
(* LIST ItkRevealIdList: *)
; CONST ItkRevealIdListLt               (*ArgCt: 3*) =   480 (*16_e0 03 *)
; CONST ItkRevealIdListLtTemp           (*ArgCt: 3*) =   481 (*16_e1 03 *)
; CONST ItkRevealIdListLtPatch          (*ArgCt: 3*) =   482 (*16_e2 03 *)
; CONST ItkRevealIdListRt               (*ArgCt: 3*) =   483 (*16_e3 03 *)

; CONST ItkRevealIdListSep              (*ArgCt: 3*) =   484 (*16_e4 03 *)
; CONST ItkRevealIdListSepTemp          (*ArgCt: 3*) =   485 (*16_e5 03 *)
; CONST ItkRevealIdListSepPatch         (*ArgCt: 3*) =   486 (*16_e6 03 *)

; CONST ItkRevealIdListElem             (*ArgCt: 3*) =   487 (*16_e7 03 *)

(* Position is "RECORD" *)
(* LIST ItkFieldDeclIdList: *)
; CONST ItkFieldDeclIdListLt            (*ArgCt: 3*) =   488 (*16_e8 03 *)
; CONST ItkFieldDeclIdListLtTemp        (*ArgCt: 3*) =   489 (*16_e9 03 *)
; CONST ItkFieldDeclIdListLtPatch       (*ArgCt: 3*) =   490 (*16_ea 03 *)
; CONST ItkFieldDeclIdListRt            (*ArgCt: 3*) =   491 (*16_eb 03 *)

; CONST ItkFieldDeclIdListSep           (*ArgCt: 3*) =   492 (*16_ec 03 *)
; CONST ItkFieldDeclIdListSepTemp       (*ArgCt: 3*) =   493 (*16_ed 03 *)
; CONST ItkFieldDeclIdListSepPatch      (*ArgCt: 3*) =   494 (*16_ee 03 *)

; CONST ItkFieldDeclIdListElem          (*ArgCt: 3*) =   495 (*16_ef 03 *)

(* Position is "(" *)
(* LIST ItkFormalsList: *)
; CONST ItkFormalsListLt                (*ArgCt: 3*) =   496 (*16_f0 03 *)
; CONST ItkFormalsListLtTemp            (*ArgCt: 3*) =   497 (*16_f1 03 *)
; CONST ItkFormalsListLtPatch           (*ArgCt: 3*) =   498 (*16_f2 03 *)
; CONST ItkFormalsListRt                (*ArgCt: 3*) =   499 (*16_f3 03 *)

; CONST ItkFormalsListSep               (*ArgCt: 3*) =   500 (*16_f4 03 *)
; CONST ItkFormalsListSepTemp           (*ArgCt: 3*) =   501 (*16_f5 03 *)
; CONST ItkFormalsListSepPatch          (*ArgCt: 3*) =   502 (*16_f6 03 *)

; CONST ItkFormalsListElem              (*ArgCt: 3*) =   503 (*16_f7 03 *)

(* Position is VALUE or LM ident, if no mode. *)
(* LIST ItkVALUEFormalIdList: *)
; CONST ItkVALUEFormalIdListLt          (*ArgCt: 3*) =   504 (*16_f8 03 *)
; CONST ItkVALUEFormalIdListLtTemp      (*ArgCt: 3*) =   505 (*16_f9 03 *)
; CONST ItkVALUEFormalIdListLtPatch     (*ArgCt: 3*) =   506 (*16_fa 03 *)
; CONST ItkVALUEFormalIdListRt          (*ArgCt: 3*) =   507 (*16_fb 03 *)

; CONST ItkVALUEFormalIdListSep         (*ArgCt: 3*) =   508 (*16_fc 03 *)
; CONST ItkVALUEFormalIdListSepTemp     (*ArgCt: 3*) =   509 (*16_fd 03 *)
; CONST ItkVALUEFormalIdListSepPatch    (*ArgCt: 3*) =   510 (*16_fe 03 *)

; CONST ItkVALUEFormalIdListElem        (*ArgCt: 3*) =   511 (*16_ff 03 *)

(* Position is VAR. *)
(* LIST ItkVARFormalIdList: *)
; CONST ItkVARFormalIdListLt            (*ArgCt: 3*) =   512 (*16_80 04 *)
; CONST ItkVARFormalIdListLtTemp        (*ArgCt: 3*) =   513 (*16_81 04 *)
; CONST ItkVARFormalIdListLtPatch       (*ArgCt: 3*) =   514 (*16_82 04 *)
; CONST ItkVARFormalIdListRt            (*ArgCt: 3*) =   515 (*16_83 04 *)

; CONST ItkVARFormalIdListSep           (*ArgCt: 3*) =   516 (*16_84 04 *)
; CONST ItkVARFormalIdListSepTemp       (*ArgCt: 3*) =   517 (*16_85 04 *)
; CONST ItkVARFormalIdListSepPatch      (*ArgCt: 3*) =   518 (*16_86 04 *)

; CONST ItkVARFormalIdListElem          (*ArgCt: 3*) =   519 (*16_87 04 *)

(* Position is READONLY. *)
(* LIST ItkROFormalIdList: *)
; CONST ItkROFormalIdListLt             (*ArgCt: 3*) =   520 (*16_88 04 *)
; CONST ItkROFormalIdListLtTemp         (*ArgCt: 3*) =   521 (*16_89 04 *)
; CONST ItkROFormalIdListLtPatch        (*ArgCt: 3*) =   522 (*16_8a 04 *)
; CONST ItkROFormalIdListRt             (*ArgCt: 3*) =   523 (*16_8b 04 *)

; CONST ItkROFormalIdListSep            (*ArgCt: 3*) =   524 (*16_8c 04 *)
; CONST ItkROFormalIdListSepTemp        (*ArgCt: 3*) =   525 (*16_8d 04 *)
; CONST ItkROFormalIdListSepPatch       (*ArgCt: 3*) =   526 (*16_8e 04 *)

; CONST ItkROFormalIdListElem           (*ArgCt: 3*) =   527 (*16_8f 04 *)

(* NOTE: As of 2024-01030, FM3 is not numbering the ItkBlockDeclSep
         tokens separators in a flattened way, when decls are in
         2-level nested lists.  This affects only the separators.
         Totals in left and right tokens are correct.
         
         Doing the separators via parsing semantic attributes could be
         done, but it is very fragile.  It involves propagating info
         left-to-right and knowing the left context of a RHS being
         reduced.  Without formal analysis, this is very error-prone.
   `
         It could more safely be coded via a field in a block object,
         but that's some work, and it's unclear whether this would
         ever be needed anyway.

         So it's left undone for now.
*)
(* LIST ItkBlockDeclList: *)
; CONST ItkBlockDeclListLt              (*ArgCt: 3*) =   528 (*16_90 04 *)
; CONST ItkBlockDeclListLtTemp          (*ArgCt: 3*) =   529 (*16_91 04 *)
; CONST ItkBlockDeclListLtPatch         (*ArgCt: 3*) =   530 (*16_92 04 *)
; CONST ItkBlockDeclListRt              (*ArgCt: 3*) =   531 (*16_93 04 *)

; CONST ItkBlockDeclListSep             (*ArgCt: 3*) =   532 (*16_94 04 *)
; CONST ItkBlockDeclListSepTemp         (*ArgCt: 3*) =   533 (*16_95 04 *)
; CONST ItkBlockDeclListSepPatch        (*ArgCt: 3*) =   534 (*16_96 04 *)

; CONST ItkBlockDeclListElem            (*ArgCt: 3*) =   535 (*16_97 04 *)

(* Statements *)
(* LIST ItkStmtList: *)
; CONST ItkStmtListLt                   (*ArgCt: 3*) =   536 (*16_98 04 *)
; CONST ItkStmtListLtTemp               (*ArgCt: 3*) =   537 (*16_99 04 *)
; CONST ItkStmtListLtPatch              (*ArgCt: 3*) =   538 (*16_9a 04 *)
; CONST ItkStmtListRt                   (*ArgCt: 3*) =   539 (*16_9b 04 *)

; CONST ItkStmtListSep                  (*ArgCt: 3*) =   540 (*16_9c 04 *)
; CONST ItkStmtListSepTemp              (*ArgCt: 3*) =   541 (*16_9d 04 *)
; CONST ItkStmtListSepPatch             (*ArgCt: 3*) =   542 (*16_9e 04 *)

; CONST ItkStmtListElem                 (*ArgCt: 3*) =   543 (*16_9f 04 *)

(* FIXED ItkBecomes: *)
; CONST ItkBecomesLt                    (*ArgCt: 2*) =   544 (*16_a0 04 *)
; CONST ItkBecomesLtTemp                (*ArgCt: 2*) =   545 (*16_a1 04 *)
; CONST ItkBecomesLtPatch               (*ArgCt: 2*) =   546 (*16_a2 04 *)
; CONST ItkBecomesRt                    (*ArgCt: 2*) =   547 (*16_a3 04 *)

(* Position of infix token, x3. *)
; CONST ItkBecomesInfix                 (*ArgCt: 2*) =   548 (*16_a4 04 *)
; CONST ItkBecomesInfixTemp             (*ArgCt: 2*) =   549 (*16_a5 04 *)
; CONST ItkBecomesInfixPatch            (*ArgCt: 2*) =   550 (*16_a6 04 *)

(*

FIXED ItkModule INT POS 3 (* UnitNo, Position. *)
        Begin INT POS 
. 

LIST ItkIdPlusList
       (* Element Count, Element No. *) 
.

*)
(* ----------------------------- Expressions ------------------------------- *)
(* FIXED ItkUnaryPlus: *)
; CONST ItkUnaryPlusLt                  (*ArgCt: 2*) =   551 (*16_a7 04 *)
; CONST ItkUnaryPlusLtTemp              (*ArgCt: 2*) =   552 (*16_a8 04 *)
; CONST ItkUnaryPlusLtPatch             (*ArgCt: 2*) =   553 (*16_a9 04 *)
; CONST ItkUnaryPlusRt                  (*ArgCt: 2*) =   554 (*16_aa 04 *)

(* FIXED ItkUnaryMinus: *)
; CONST ItkUnaryMinusLt                 (*ArgCt: 2*) =   555 (*16_ab 04 *)
; CONST ItkUnaryMinusLtTemp             (*ArgCt: 2*) =   556 (*16_ac 04 *)
; CONST ItkUnaryMinusLtPatch            (*ArgCt: 2*) =   557 (*16_ad 04 *)
; CONST ItkUnaryMinusRt                 (*ArgCt: 2*) =   558 (*16_ae 04 *)

(* FIXED ItkNOT: *)
; CONST ItkNOTLt                        (*ArgCt: 2*) =   559 (*16_af 04 *)
; CONST ItkNOTLtTemp                    (*ArgCt: 2*) =   560 (*16_b0 04 *)
; CONST ItkNOTLtPatch                   (*ArgCt: 2*) =   561 (*16_b1 04 *)
; CONST ItkNOTRt                        (*ArgCt: 2*) =   562 (*16_b2 04 *)

(* FIXED ItkEqual: *)
; CONST ItkEqualLt                      (*ArgCt: 2*) =   563 (*16_b3 04 *)
; CONST ItkEqualLtTemp                  (*ArgCt: 2*) =   564 (*16_b4 04 *)
; CONST ItkEqualLtPatch                 (*ArgCt: 2*) =   565 (*16_b5 04 *)
; CONST ItkEqualRt                      (*ArgCt: 2*) =   566 (*16_b6 04 *)

; CONST ItkEqualBinOp                   (*ArgCt: 2*) =   567 (*16_b7 04 *)
; CONST ItkEqualBinOpTemp               (*ArgCt: 2*) =   568 (*16_b8 04 *)
; CONST ItkEqualBinOpPatch              (*ArgCt: 2*) =   569 (*16_b9 04 *)

(* FIXED ItkUnequal: *)
; CONST ItkUnequalLt                    (*ArgCt: 2*) =   570 (*16_ba 04 *)
; CONST ItkUnequalLtTemp                (*ArgCt: 2*) =   571 (*16_bb 04 *)
; CONST ItkUnequalLtPatch               (*ArgCt: 2*) =   572 (*16_bc 04 *)
; CONST ItkUnequalRt                    (*ArgCt: 2*) =   573 (*16_bd 04 *)

; CONST ItkUnequalBinOp                 (*ArgCt: 2*) =   574 (*16_be 04 *)
; CONST ItkUnequalBinOpTemp             (*ArgCt: 2*) =   575 (*16_bf 04 *)
; CONST ItkUnequalBinOpPatch            (*ArgCt: 2*) =   576 (*16_c0 04 *)

(* FIXED ItkLess: *)
; CONST ItkLessLt                       (*ArgCt: 2*) =   577 (*16_c1 04 *)
; CONST ItkLessLtTemp                   (*ArgCt: 2*) =   578 (*16_c2 04 *)
; CONST ItkLessLtPatch                  (*ArgCt: 2*) =   579 (*16_c3 04 *)
; CONST ItkLessRt                       (*ArgCt: 2*) =   580 (*16_c4 04 *)

; CONST ItkLessBinOp                    (*ArgCt: 2*) =   581 (*16_c5 04 *)
; CONST ItkLessBinOpTemp                (*ArgCt: 2*) =   582 (*16_c6 04 *)
; CONST ItkLessBinOpPatch               (*ArgCt: 2*) =   583 (*16_c7 04 *)

(* FIXED ItkGreater: *)
; CONST ItkGreaterLt                    (*ArgCt: 2*) =   584 (*16_c8 04 *)
; CONST ItkGreaterLtTemp                (*ArgCt: 2*) =   585 (*16_c9 04 *)
; CONST ItkGreaterLtPatch               (*ArgCt: 2*) =   586 (*16_ca 04 *)
; CONST ItkGreaterRt                    (*ArgCt: 2*) =   587 (*16_cb 04 *)

; CONST ItkGreaterBinOp                 (*ArgCt: 2*) =   588 (*16_cc 04 *)
; CONST ItkGreaterBinOpTemp             (*ArgCt: 2*) =   589 (*16_cd 04 *)
; CONST ItkGreaterBinOpPatch            (*ArgCt: 2*) =   590 (*16_ce 04 *)

(* FIXED ItkLessEqual: *)
; CONST ItkLessEqualLt                  (*ArgCt: 2*) =   591 (*16_cf 04 *)
; CONST ItkLessEqualLtTemp              (*ArgCt: 2*) =   592 (*16_d0 04 *)
; CONST ItkLessEqualLtPatch             (*ArgCt: 2*) =   593 (*16_d1 04 *)
; CONST ItkLessEqualRt                  (*ArgCt: 2*) =   594 (*16_d2 04 *)

; CONST ItkLessEqualBinOp               (*ArgCt: 2*) =   595 (*16_d3 04 *)
; CONST ItkLessEqualBinOpTemp           (*ArgCt: 2*) =   596 (*16_d4 04 *)
; CONST ItkLessEqualBinOpPatch          (*ArgCt: 2*) =   597 (*16_d5 04 *)

(* FIXED ItkGreaterEqual: *)
; CONST ItkGreaterEqualLt               (*ArgCt: 2*) =   598 (*16_d6 04 *)
; CONST ItkGreaterEqualLtTemp           (*ArgCt: 2*) =   599 (*16_d7 04 *)
; CONST ItkGreaterEqualLtPatch          (*ArgCt: 2*) =   600 (*16_d8 04 *)
; CONST ItkGreaterEqualRt               (*ArgCt: 2*) =   601 (*16_d9 04 *)

; CONST ItkGreaterEqualBinOp            (*ArgCt: 2*) =   602 (*16_da 04 *)
; CONST ItkGreaterEqualBinOpTemp        (*ArgCt: 2*) =   603 (*16_db 04 *)
; CONST ItkGreaterEqualBinOpPatch       (*ArgCt: 2*) =   604 (*16_dc 04 *)

(* FIXED ItkBinaryPlus: *)
; CONST ItkBinaryPlusLt                 (*ArgCt: 2*) =   605 (*16_dd 04 *)
; CONST ItkBinaryPlusLtTemp             (*ArgCt: 2*) =   606 (*16_de 04 *)
; CONST ItkBinaryPlusLtPatch            (*ArgCt: 2*) =   607 (*16_df 04 *)
; CONST ItkBinaryPlusRt                 (*ArgCt: 2*) =   608 (*16_e0 04 *)

; CONST ItkBinaryPlusBinOp              (*ArgCt: 2*) =   609 (*16_e1 04 *)
; CONST ItkBinaryPlusBinOpTemp          (*ArgCt: 2*) =   610 (*16_e2 04 *)
; CONST ItkBinaryPlusBinOpPatch         (*ArgCt: 2*) =   611 (*16_e3 04 *)

(* FIXED ItkBinaryMinus: *)
; CONST ItkBinaryMinusLt                (*ArgCt: 2*) =   612 (*16_e4 04 *)
; CONST ItkBinaryMinusLtTemp            (*ArgCt: 2*) =   613 (*16_e5 04 *)
; CONST ItkBinaryMinusLtPatch           (*ArgCt: 2*) =   614 (*16_e6 04 *)
; CONST ItkBinaryMinusRt                (*ArgCt: 2*) =   615 (*16_e7 04 *)

; CONST ItkBinaryMinusBinOp             (*ArgCt: 2*) =   616 (*16_e8 04 *)
; CONST ItkBinaryMinusBinOpTemp         (*ArgCt: 2*) =   617 (*16_e9 04 *)
; CONST ItkBinaryMinusBinOpPatch        (*ArgCt: 2*) =   618 (*16_ea 04 *)

(* FIXED ItkAmpersand: *)
; CONST ItkAmpersandLt                  (*ArgCt: 2*) =   619 (*16_eb 04 *)
; CONST ItkAmpersandLtTemp              (*ArgCt: 2*) =   620 (*16_ec 04 *)
; CONST ItkAmpersandLtPatch             (*ArgCt: 2*) =   621 (*16_ed 04 *)
; CONST ItkAmpersandRt                  (*ArgCt: 2*) =   622 (*16_ee 04 *)

; CONST ItkAmpersandBinOp               (*ArgCt: 2*) =   623 (*16_ef 04 *)
; CONST ItkAmpersandBinOpTemp           (*ArgCt: 2*) =   624 (*16_f0 04 *)
; CONST ItkAmpersandBinOpPatch          (*ArgCt: 2*) =   625 (*16_f1 04 *)

(* FIXED ItkStar: *)
; CONST ItkStarLt                       (*ArgCt: 2*) =   626 (*16_f2 04 *)
; CONST ItkStarLtTemp                   (*ArgCt: 2*) =   627 (*16_f3 04 *)
; CONST ItkStarLtPatch                  (*ArgCt: 2*) =   628 (*16_f4 04 *)
; CONST ItkStarRt                       (*ArgCt: 2*) =   629 (*16_f5 04 *)

; CONST ItkStarBinOp                    (*ArgCt: 2*) =   630 (*16_f6 04 *)
; CONST ItkStarBinOpTemp                (*ArgCt: 2*) =   631 (*16_f7 04 *)
; CONST ItkStarBinOpPatch               (*ArgCt: 2*) =   632 (*16_f8 04 *)

(* FIXED ItkSlash: *)
; CONST ItkSlashLt                      (*ArgCt: 2*) =   633 (*16_f9 04 *)
; CONST ItkSlashLtTemp                  (*ArgCt: 2*) =   634 (*16_fa 04 *)
; CONST ItkSlashLtPatch                 (*ArgCt: 2*) =   635 (*16_fb 04 *)
; CONST ItkSlashRt                      (*ArgCt: 2*) =   636 (*16_fc 04 *)

; CONST ItkSlashBinOp                   (*ArgCt: 2*) =   637 (*16_fd 04 *)
; CONST ItkSlashBinOpTemp               (*ArgCt: 2*) =   638 (*16_fe 04 *)
; CONST ItkSlashBinOpPatch              (*ArgCt: 2*) =   639 (*16_ff 04 *)

(* FIXED ItkAND: *)
; CONST ItkANDLt                        (*ArgCt: 2*) =   640 (*16_80 05 *)
; CONST ItkANDLtTemp                    (*ArgCt: 2*) =   641 (*16_81 05 *)
; CONST ItkANDLtPatch                   (*ArgCt: 2*) =   642 (*16_82 05 *)
; CONST ItkANDRt                        (*ArgCt: 2*) =   643 (*16_83 05 *)

; CONST ItkANDBinOp                     (*ArgCt: 2*) =   644 (*16_84 05 *)
; CONST ItkANDBinOpTemp                 (*ArgCt: 2*) =   645 (*16_85 05 *)
; CONST ItkANDBinOpPatch                (*ArgCt: 2*) =   646 (*16_86 05 *)

(* FIXED ItkDIV: *)
; CONST ItkDIVLt                        (*ArgCt: 2*) =   647 (*16_87 05 *)
; CONST ItkDIVLtTemp                    (*ArgCt: 2*) =   648 (*16_88 05 *)
; CONST ItkDIVLtPatch                   (*ArgCt: 2*) =   649 (*16_89 05 *)
; CONST ItkDIVRt                        (*ArgCt: 2*) =   650 (*16_8a 05 *)

; CONST ItkDIVBinOp                     (*ArgCt: 2*) =   651 (*16_8b 05 *)
; CONST ItkDIVBinOpTemp                 (*ArgCt: 2*) =   652 (*16_8c 05 *)
; CONST ItkDIVBinOpPatch                (*ArgCt: 2*) =   653 (*16_8d 05 *)

(* FIXED ItkIN: *)
; CONST ItkINLt                         (*ArgCt: 2*) =   654 (*16_8e 05 *)
; CONST ItkINLtTemp                     (*ArgCt: 2*) =   655 (*16_8f 05 *)
; CONST ItkINLtPatch                    (*ArgCt: 2*) =   656 (*16_90 05 *)
; CONST ItkINRt                         (*ArgCt: 2*) =   657 (*16_91 05 *)

; CONST ItkINBinOp                      (*ArgCt: 2*) =   658 (*16_92 05 *)
; CONST ItkINBinOpTemp                  (*ArgCt: 2*) =   659 (*16_93 05 *)
; CONST ItkINBinOpPatch                 (*ArgCt: 2*) =   660 (*16_94 05 *)

(* FIXED ItkMOD: *)
; CONST ItkMODLt                        (*ArgCt: 2*) =   661 (*16_95 05 *)
; CONST ItkMODLtTemp                    (*ArgCt: 2*) =   662 (*16_96 05 *)
; CONST ItkMODLtPatch                   (*ArgCt: 2*) =   663 (*16_97 05 *)
; CONST ItkMODRt                        (*ArgCt: 2*) =   664 (*16_98 05 *)

; CONST ItkMODBinOp                     (*ArgCt: 2*) =   665 (*16_99 05 *)
; CONST ItkMODBinOpTemp                 (*ArgCt: 2*) =   666 (*16_9a 05 *)
; CONST ItkMODBinOpPatch                (*ArgCt: 2*) =   667 (*16_9b 05 *)

(* FIXED ItkOR: *)
; CONST ItkORLt                         (*ArgCt: 2*) =   668 (*16_9c 05 *)
; CONST ItkORLtTemp                     (*ArgCt: 2*) =   669 (*16_9d 05 *)
; CONST ItkORLtPatch                    (*ArgCt: 2*) =   670 (*16_9e 05 *)
; CONST ItkORRt                         (*ArgCt: 2*) =   671 (*16_9f 05 *)

; CONST ItkORBinOp                      (*ArgCt: 2*) =   672 (*16_a0 05 *)
; CONST ItkORBinOpTemp                  (*ArgCt: 2*) =   673 (*16_a1 05 *)
; CONST ItkORBinOpPatch                 (*ArgCt: 2*) =   674 (*16_a2 05 *)

(* FIXED ItkExprDot: *)
; CONST ItkExprDotLt                    (*ArgCt: 3*) =   675 (*16_a3 05 *)
; CONST ItkExprDotLtTemp                (*ArgCt: 3*) =   676 (*16_a4 05 *)
; CONST ItkExprDotLtPatch               (*ArgCt: 3*) =   677 (*16_a5 05 *)
; CONST ItkExprDotRt                    (*ArgCt: 3*) =   678 (*16_a6 05 *)

(* INT is meaningless, but greatly simplifies parsing *)
(* FIXED ItkDeref: *)
; CONST ItkDerefLt                      (*ArgCt: 3*) =   679 (*16_a7 05 *)
; CONST ItkDerefLtTemp                  (*ArgCt: 3*) =   680 (*16_a8 05 *)
; CONST ItkDerefLtPatch                 (*ArgCt: 3*) =   681 (*16_a9 05 *)
; CONST ItkDerefRt                      (*ArgCt: 3*) =   682 (*16_aa 05 *)

(* Number of subscripts. *)
(* FIXED ItkSubscript: *)
; CONST ItkSubscriptLt                  (*ArgCt: 3*) =   683 (*16_ab 05 *)
; CONST ItkSubscriptLtTemp              (*ArgCt: 3*) =   684 (*16_ac 05 *)
; CONST ItkSubscriptLtPatch             (*ArgCt: 3*) =   685 (*16_ad 05 *)
; CONST ItkSubscriptRt                  (*ArgCt: 3*) =   686 (*16_ae 05 *)

(* Number of actual parameters *)
(* FIXED ItkCall: *)
; CONST ItkCallLt                       (*ArgCt: 3*) =   687 (*16_af 05 *)
; CONST ItkCallLtTemp                   (*ArgCt: 3*) =   688 (*16_b0 05 *)
; CONST ItkCallLtPatch                  (*ArgCt: 3*) =   689 (*16_b1 05 *)
; CONST ItkCallRt                       (*ArgCt: 3*) =   690 (*16_b2 05 *)

(* Number of values *)
(* FIXED ItkConstructor: *)
; CONST ItkConstructorLt                (*ArgCt: 3*) =   691 (*16_b3 05 *)
; CONST ItkConstructorLtTemp            (*ArgCt: 3*) =   692 (*16_b4 05 *)
; CONST ItkConstructorLtPatch           (*ArgCt: 3*) =   693 (*16_b5 05 *)
; CONST ItkConstructorRt                (*ArgCt: 3*) =   694 (*16_b6 05 *)

(* FIXED ItkRange: *)
; CONST ItkRangeLt                      (*ArgCt: 2*) =   695 (*16_b7 05 *)
; CONST ItkRangeLtTemp                  (*ArgCt: 2*) =   696 (*16_b8 05 *)
; CONST ItkRangeLtPatch                 (*ArgCt: 2*) =   697 (*16_b9 05 *)
; CONST ItkRangeRt                      (*ArgCt: 2*) =   698 (*16_ba 05 *)

; CONST ItkRangeDotDot                  (*ArgCt: 2*) =   699 (*16_bb 05 *)
; CONST ItkRangeDotDotTemp              (*ArgCt: 2*) =   700 (*16_bc 05 *)
; CONST ItkRangeDotDotPatch             (*ArgCt: 2*) =   701 (*16_bd 05 *)

(* In array constructor. *)
(* LONE ItkConstructorDotDot: *)
; CONST ItkConstructorDotDot            (*ArgCt: 2*) =   702 (*16_be 05 *)
(* The values of all scalar literals are LOOPHOLEd to LONGINT. *)
(* LONE ItkIntLit: *)
; CONST ItkIntLit                       (*ArgCt: 3*) =   703 (*16_bf 05 *)
(* LONE ItkLongIntLit: *)
; CONST ItkLongIntLit                   (*ArgCt: 3*) =   704 (*16_c0 05 *)
(* value, base. *)
(* LONE ItkBasedLit: *)
; CONST ItkBasedLit                     (*ArgCt: 4*) =   705 (*16_c1 05 *)
(* value. base *)
(* LONE ItkLongBasedLit: *)
; CONST ItkLongBasedLit                 (*ArgCt: 4*) =   706 (*16_c2 05 *)
(* LONE ItkRealLit: *)
; CONST ItkRealLit                      (*ArgCt: 3*) =   707 (*16_c3 05 *)
(* LONE ItkLongRealLit: *)
; CONST ItkLongRealLit                  (*ArgCt: 3*) =   708 (*16_c4 05 *)
(* LONE ItkExtendedLit: *)
; CONST ItkExtendedLit                  (*ArgCt: 3*) =   709 (*16_c5 05 *)
(* LONE ItkCharLit: *)
; CONST ItkCharLit                      (*ArgCt: 3*) =   710 (*16_c6 05 *)
(* LONE ItkWideCharLit: *)
; CONST ItkWideCharLit                  (*ArgCt: 3*) =   711 (*16_c7 05 *)
(* value atom, Char count. *)
(* FIXED ItkTextLit: *)
; CONST ItkTextLitLt                    (*ArgCt: 3*) =   712 (*16_c8 05 *)
; CONST ItkTextLitLtTemp                (*ArgCt: 3*) =   713 (*16_c9 05 *)
; CONST ItkTextLitLtPatch               (*ArgCt: 3*) =   714 (*16_ca 05 *)
; CONST ItkTextLitRt                    (*ArgCt: 3*) =   715 (*16_cb 05 *)

(* value atom, Char count. *)
(* FIXED ItkWideTextLit: *)
; CONST ItkWideTextLitLt                (*ArgCt: 3*) =   716 (*16_cc 05 *)
; CONST ItkWideTextLitLtTemp            (*ArgCt: 3*) =   717 (*16_cd 05 *)
; CONST ItkWideTextLitLtPatch           (*ArgCt: 3*) =   718 (*16_ce 05 *)
; CONST ItkWideTextLitRt                (*ArgCt: 3*) =   719 (*16_cf 05 *)

(* LIST ItkActualsList: *)
; CONST ItkActualsListLt                (*ArgCt: 3*) =   720 (*16_d0 05 *)
; CONST ItkActualsListLtTemp            (*ArgCt: 3*) =   721 (*16_d1 05 *)
; CONST ItkActualsListLtPatch           (*ArgCt: 3*) =   722 (*16_d2 05 *)
; CONST ItkActualsListRt                (*ArgCt: 3*) =   723 (*16_d3 05 *)

; CONST ItkActualsListSep               (*ArgCt: 3*) =   724 (*16_d4 05 *)
; CONST ItkActualsListSepTemp           (*ArgCt: 3*) =   725 (*16_d5 05 *)
; CONST ItkActualsListSepPatch          (*ArgCt: 3*) =   726 (*16_d6 05 *)

; CONST ItkActualsListElem              (*ArgCt: 3*) =   727 (*16_d7 05 *)

(* LIST ItkSubscriptsPlusList: *)
; CONST ItkSubscriptsPlusListLt         (*ArgCt: 3*) =   728 (*16_d8 05 *)
; CONST ItkSubscriptsPlusListLtTemp     (*ArgCt: 3*) =   729 (*16_d9 05 *)
; CONST ItkSubscriptsPlusListLtPatch    (*ArgCt: 3*) =   730 (*16_da 05 *)
; CONST ItkSubscriptsPlusListRt         (*ArgCt: 3*) =   731 (*16_db 05 *)

; CONST ItkSubscriptsPlusListSep        (*ArgCt: 3*) =   732 (*16_dc 05 *)
; CONST ItkSubscriptsPlusListSepTemp    (*ArgCt: 3*) =   733 (*16_dd 05 *)
; CONST ItkSubscriptsPlusListSepPatch   (*ArgCt: 3*) =   734 (*16_de 05 *)

; CONST ItkSubscriptsPlusListElem       (*ArgCt: 3*) =   735 (*16_df 05 *)

(* FIXED ItkAnonActual: *)
; CONST ItkAnonActualLt                 (*ArgCt: 2*) =   736 (*16_e0 05 *)
; CONST ItkAnonActualLtTemp             (*ArgCt: 2*) =   737 (*16_e1 05 *)
; CONST ItkAnonActualLtPatch            (*ArgCt: 2*) =   738 (*16_e2 05 *)
; CONST ItkAnonActualRt                 (*ArgCt: 2*) =   739 (*16_e3 05 *)

(* FIXED ItkNamedExpr: *)
; CONST ItkNamedExprLt                  (*ArgCt: 3*) =   740 (*16_e4 05 *)
; CONST ItkNamedExprLtTemp              (*ArgCt: 3*) =   741 (*16_e5 05 *)
; CONST ItkNamedExprLtPatch             (*ArgCt: 3*) =   742 (*16_e6 05 *)
; CONST ItkNamedExprRt                  (*ArgCt: 3*) =   743 (*16_e7 05 *)

(* End of FM3IntToks. *)
; CONST TkMaxTok                                     =   743

; END FM3IntToks
.

