
(* -----------------------------------------------------------------------1- *)
(* This file is part of the FM3 Modula-3 compiler.                           *)
(* Copyright 2023..2024 Rodney M. Bates.                                     *)
(* rodney.m.bates@acm.org                                                    *)
(* Licensed under the MIT License.                                           *)
(* -----------------------------------------------------------------------2- *)

(* Input file FM3IntToks.gentok, to metaprogram GenTok. *)

UNITNAME FM3IntToks
(* DECREASING No need for this now. *)  

(* Internal tokens for FM3 Modula-3 compiler, 
   used in intermediate token streams.  
*)

(* WARNING: Do not use single quotes inside a comment in this file. *) 

ABS 210
(* ^I think source tokens and internal tokens never occur in the same context,
    but to simplify debugging, give then disjoint ranges.
*) 

(* Being low-numbered, these will read and write either forward
   or backward, without value change.
FIXME: Not so. must be < 64.  This clashes with src tokens that
       are copied into FM3Parser.lalr. 
*) 
LONE
     ItkNull .
     ItkBOF .
     ItkEOF .
     ItkLeftEnd .
     ItkRightEnd . 
     ItkLeftEndIncomplete . 
     ItkRightEndIncomplete .

FIXED ItkSkip INT (* Unique Pair number. *) .

FIXED
ItkInterface INT POS 3 (* UnitNo, Position. *) . 

ItkModule INT POS 3 (* UnitNo, Position. *)
        Begin INT POS 
. 


LONE
  ItkUnitId IDENT POS 3 (* IdAtom, Line, Column. *) . 

  ItkFormalsListEmpty . 
  ItkFormalTypeAbsent POS 2 (* Position. *).
  ItkFormalExprAbsent POS 2 (* Position. *).
  (*ItkRaisesSetAbsent POS 2 (* Position. *) *) . 
  ItkRaisesANY POS 2 (* Position. *) .
  ItkResultTypeAbsent POS 2 (* Position. *). 
  ItkProcBodyAbsent POS 2 (* Position. *).
  ItkIdRefAtomNotUsable IDENT POS . 

(* Scopes and declarations within. *) 
LONE
  ItkScopeEmpty INT (* ScopeNo. *) .
  ItkDeclScopeLt INT (* ScopeNo. *) .
  ItkDeclScopeRt INT (* ScopeNo. *) . 
  ItkOpenScopeLt INT (* ScopeNo. *) .
  ItkOpenScopeRt INT (* ScopeNo. *) . 
  ItkReservedIdRef IDENT POS 3 (* Rid*, Position. *). 
  ItkDuplDeclId IDENT POS 3 (* IdAtom, position *) . 
  ItkDeclId INT IDENT POS 4 (* DeclKind, IdAtom, position *) .
  ItkDeclNo DECL POS 3 (* DeclNo, position *) .
  ItkDefTopExprNo INT POS (* ExprNo. *)  

(* Identifier references. *) 

ItkIdRefAtom IDENT POS 3
  (* IdAtom, position. Only non-reserved. Occurs before pass2. *). 
ItkIdRefDeclNo DECL POS (* DeclNo, position. Occurs after pass2. *) .
ItkIdRefUnitNoDeclNo INT DECL POS (* UnitNo, DeclNo, position. *)
                                  (* Occurs after pass2. *) .
ItkExpImpRef INT DECL POS (* UnitNo, DeclNo, Position.  Occurs after pass 2. *) 

ItkQualIdAtoms        IDENT IDENT POS POS (* Lt & Rt Id atoms. *) .
ItkQualIdDeclNoAtom   DECL  IDENT POS POS (* Lt decl no, Rt id atom. *) .
ItkQualIdDeclNos      DECL  DECL  POS POS (* Lt & Rt decl nos. *) .
ItkQualIdUnitNoDeclNo INT   DECL  POS POS (* Lt UnitNo, Rt declNo. *) .

ItkInvalidRef POS .

FIXED   
ItkSignatureProper POS 2 (* Position. *) .
ItkSignatureFunc POS 2 (* Position. *).
ItkMethodDecl IDENT POS 3 (* Position. *).
ItkFormalType POS 2 (* Position of colon. *) . 
ItkFormalExpr POS 2 (* Position of ":=" *).
ItkResultType POS 2 (* Position of colon. *).
ItkRaisesSet INT POS 3 (* list count. Position of RAISES. *). 
ItkProcNoBody IDENT 1 (* Atom of signature. *) .
ItkProcWBody IDENT 1 (* Atom of signature. *) .
ItkProcBody POS 2 (* Position of equal sign. *) .
ItkProcType POS 2 (* Position of "PROCEDURE". *) . 
ItkOverride POS (* Position of equal sign. *)
  Equals POS . 

FIXED
ItkBlock INT POS 3 (* Construct no., Position of LM declaration. *)
  BEGIN INT POS 3 (* Construct no.,Position of BEGIN. *) . 

(* Type decls. *)

(* All replaced by ItkDeclId:   
LONE
ItkTypeDeclId IDENT POS 3 .
ItkRevealId IDENT POS 3 . 
ItkConstId IDENT POS 3 . 
*) 

FIXED
ItkConstDecl POS
  Type POS BOOL 
  Value POS . 
 
ItkTypeDecl POS 2 (* Position of ident. *)
  Type POS 2 . 
ItkSubtypeDecl POS 2 (* Position of ident (Lt). *)
  Subtype POS 2 . 

ItkFullReveal POS 2 (* Position of ident. *)
  Type POS 2 . 
ItkPartialReveal POS 2 (* Position of ident. *)
  Subtype POS 2 .

ItkExceptionDecl POS (* Position of ident. *) 

LONE
ItkInvalidType POS (* To suppress derived errors. *) . 

(*
LONE
ItkVarDeclId     IDENT POS . 
ItkRecFieldId    IDENT POS . 
ItkVALUEFormalId IDENT POS . 
ItkVARFormalId   IDENT POS . 
ItkROFormalId    IDENT POS . 
*)
FIXED 
ItkREFType POS 2 .
ItkUNTRACEDREFType POS 2 .
ItkOpenArrayType POS 2 .
ItkSubrType POS 2
  DotDot POS 2
. 

(* Record type definitions. *) 
FIXED
  ItkRecType INT POS 3 (* field count, Position of RECORD. *) .

(* Enumeration type definitions. *) 
FIXED
  ItkEnumType INT POS 3 (* field count, Position of "..". *) .

(* Object types. *)
FIXED 
  ItkObjType POS 2 (* Position of OBJECT. *) .
  ItkSupertype POS 2 (* Position of OBJECT. *) .
  ItkBrand POS (* With explicit brand value. *) .

LONE
  ItkAbsentSupertype POS .
  ItkAbsentBrand POS . 
  ItkBrandAnon POS (* anonymous brand value. *) . 

LIST
ItkEnumLitList (* This suffices to delimit an enumeration type. *) . 
ItkFieldDeclList .
ItkVarDeclList .
ItkTypeDeclList .
ItkMethodDeclList .
ItkOverrideList . 

FIXED
(* One field decl, with possibly multiple idents. *) 
ItkFieldDecl POS 2 (* Position of LM ident (Lt) or position of semicolon (Rt). *)
  Type POS 2       (* Position of colon. *) 
  Value POS 2      (* Position of becomes. *)
. 

(* One variable decl, with possibly multiple idents. *) 
ItkVarDecl POS 2 (* Position of LM ident (Lt) or position of semicolon (Rt). *)
  Type POS 2     (* Position of colon. *) 
  Value POS 2    (* Position of becomes. *)
.

LONE
  ItkDeclTypeAbsent POS .
  ItkDeclValAbsent POS . 

(* One formal, with possibly multiple idents. *)
FIXED 
  ItkVALUEFormal POS 2 (* Position of LM ident (Lt) or of semicolon (Rt). *)
    Type POS 2         (* Position of colon. *) 
    Value POS 2        (* Position of becomes. *) 
.

(* One formal, with possibly multiple idents. *) 
ItkVARFormal POS 2     (* Position of LM ident (Lt) or of semicolon (Rt). *)
  Type   POS 2         (* Position of colon. *) 
  Value POS 2          (* Position of becomes. *) 
.

(* One formal, with possibly multiple idents. *) 
ItkROFormal POS 2      (* Position of LM ident (Lt) or of semicolon (Rt). *)
  Type POS 2           (* Position of colon. *) 
  Value POS 2          (* Position of becomes, *) 
.

LIST

(* GenTok implicitly gives list tokens:
     The usual patch coordinate, if it's a patch token.
     One integer operand for element count (Lt & Rt tokens)
       or, for separator tokens, number of elements to left.  
     Position.  For Lt & Rt, of what source token  depends on the list.
       For separators, of the source separator, or if none, beginning
       of element to right.
*) 
 
ItkGenFormalIdList (* Position is "(" *) .
ItkGenActualIdList (* Position is "(" *) .
ItkVarDeclIdList (* Position is is LM ident. *) .
ItkTypeDeclIdList (* Position is LM ident . *) .
ItkRevealIdList (* Position is LM ident . *) .
ItkFieldDeclIdList (* Position is "RECORD" *) .
ItkFormalsList (* Position is "(" *) .
ItkVALUEFormalIdList (* Position is VALUE or LM ident, if no mode. *). 
ItkVARFormalIdList (* Position is VAR. *) . 
ItkROFormalIdList (* Position is READONLY. *). 

(* NOTE: As of 2024-01030, FM3 is not numbering the ItkBlockDeclSep
         tokens separators in a flattened way, when decls are in
         2-level nested lists.  This affects only the separators.
         Totals in left and right tokens are correct.
         
         Doing the separators via parsing semantic attributes could be
         done, but it is very fragile.  It involves propagating info
         left-to-right and knowing the left context of a RHS being
         reduced.  Without formal analysis, this is very error-prone.
   `
         It could more safely be coded via a field in a block object,
         but that's some work, and it's unclear whether this would
         ever be needed anyway.

         So it's left undone for now.
*) 
ItkOpenDeclList . 

(* Statements *)

LIST ItkStmtList . 

FIXED ItkBecomes POS 2 Infix POS 2 (* Position of infix token, x3. *) .  

(*

FIXED ItkModule INT POS 3 (* UnitNo, Position. *)
        Begin INT POS 
. 

LIST ItkIdPlusList
       (* Element Count, Element No. *) 
.

*)

(* ----------------------------- Expressions ------------------------------- *) 
  
(* Unary operators: *) 
FIXED
  ItkUnaryOp INT POS    (* Operation code. *) . 
(**** 
  ItkUnaryPlus  POS .
  ItkUnaryMinus POS . 
  ItkNOT        POS .
***)

(* Unary reserved Ident functions: *) 
FIXED
  ItkABS        POS .
  ItkADR        POS .
  ItkADRSIZE    POS .
  ItkBITSIZE    POS .
  ItkBYTESIZE   POS . 
  ItkCEILING    POS .
  ItkFIRST      POS .
  ItkFLOAT      POS .
  ItkFLOOR      POS .
  ItkLAST       POS .
  ItkNUMBER     POS .
  ItkORD        POS .
  ItkROUND      POS .
  ItkTRUNC      POS .
  ItkTYPECODE   POS .
  ItkDEC        POS .
  ItkDISPOSE    POS .
  ItkINC        POS .

(* Unary imported predefined functions" *) 
  ItkWord_T     POS .
  ItkWord_Size  POS .
  ItkWord_Not   POS .
  ItkLong_T     POS .
  ItkLong_Size  POS .
  ItkLong_Not   POS .

(* Binary operators: *) 
FIXED
  ItkBinOp INT POS    Operator INT POS (* Operation code. *) . 
(*  
  ItkEqual POS        BinOp POS . 
  ItkUnequal POS      BinOp POS . 
  ItkLess POS         BinOp POS . 
  ItkGreater POS      BinOp POS . 
  ItkLessEqual POS    BinOp POS . 
  ItkGreaterEqual POS BinOp POS . 
  ItkBinaryPlus POS   BinOp POS . 
  ItkBinaryMinus POS  BinOp POS . 
  ItkAmpersand POS    BinOp POS . 
  ItkStar POS         BinOp POS .
  ItkSlash POS        BinOp POS . 
  ItkAND POS          BinOp POS . 
  ItkDIV POS          BinOp POS . 
  ItkIN POS           BinOp POS . 
  ItkMOD POS          BinOp POS .
  ItkOR POS           BinOp POS .
*)
(* Binary reserved Ident functions. *)  
FIXED
  ItkISTYPE     POS BinOp POS .
  ItkLOOPHOLE   POS BinOp POS . 
  ItkMAX        POS BinOp POS . 
  ItkMIN        POS BinOp POS . 
  ItkNARROW     POS BinOp POS . 
  ItkVAL        POS BinOp POS .

(* Binary imported predefined functions" *)
  ItkWord_Plus        POS BinOp POS .
  ItkWord_Times       POS BinOp POS .
  ItkWord_Minus       POS BinOp POS .
  ItkWord_Divide      POS BinOp POS .
  ItkWord_Mod         POS BinOp POS .
  ItkWord_LT          POS BinOp POS .
  ItkWord_LE          POS BinOp POS .
  ItkWord_GT          POS BinOp POS .
  ItkWord_GE          POS BinOp POS .
  ItkWord_And         POS BinOp POS .
  ItkWord_Or          POS BinOp POS .  
  ItkWord_Xor         POS BinOp POS .
  ItkWord_Shift       POS BinOp POS .
  ItkWord_LeftShift   POS BinOp POS .
  ItkWord_RightShift  POS BinOp POS .
  ItkWord_Rotate      POS BinOp POS .
  ItkWord_LeftRotate  POS BinOp POS .
  ItkWord_RightRotate POS BinOp POS .
        
  ItkLong_Plus        POS BinOp POS .
  ItkLong_Times       POS BinOp POS .
  ItkLong_Minus       POS BinOp POS .
  ItkLong_Divide      POS BinOp POS .
  ItkLong_Mod         POS BinOp POS .
  ItkLong_LT          POS BinOp POS .
  ItkLong_LE          POS BinOp POS .
  ItkLong_GT          POS BinOp POS .
  ItkLong_GE          POS BinOp POS .
  ItkLong_And         POS BinOp POS .
  ItkLong_Or          POS BinOp POS .
  ItkLong_Xor         POS BinOp POS .
  ItkLong_Shift       POS BinOp POS .
  ItkLong_LeftShift   POS BinOp POS .
  ItkLong_RightShift  POS BinOp POS .
  ItkLong_Rotate      POS BinOp POS .
  ItkLong_LeftRotate  POS BinOp POS .
  ItkLong_RightRotate POS BinOp POS .

(* Ternary imported predefined functions" *) 

  ItkTernOp INT POS   INT POS OpCode1 INT POS OpCode2 .

  ItkWord_Extract     POS TernOp1 POS TernOp2 POS . 
  ItkWord_Insert      POS TernOp1 POS TernOp2 POS .
  ItkLong_Extract     POS TernOp1 POS TernOp2 POS .
  ItkLong_Insert      POS TernOp1 POS TernOp2 POS .
  
FIXED
  ItkExprDot IDENT POS . 
  ItkDeref POS . 
  ItkSubscript INT POS (* Number of subscripts. *) .
  ItkCall INT POS (* Number of actual parameters *) .
  ItkConstructor INT POS (* Number of values *) .
  ItkBuiltinCall IDENT INT POS (* Builtin source token, actuals count. *) .
  (* Surrounds a list of actuals. *) 

LONE 
  ItkBuiltinIdRef IDENT POS (* IDENT is predefined id code. *) .
  (*^ Only a builtin Id that takes no parameters. *) 

  ItkRange POS
      DotDot POS .

LONE
  ItkConstructorDotDot POS (* In array constructor. *) . 

  (* The values of all scalar literals are LOOPHOLEd to LONGINT. *)
  ItkIntLit INT POS .
  ItkLongIntLit INT POS .
  ItkBasedLit INT INT POS (* value, base. *) .
  ItkLongBasedLit INT INT POS (* value. base *).
  ItkRealLit INT POS .
  ItkLongRealLit INT POS .
  ItkExtendedLit INT POS .
  ItkCharLit     INT POS .
  ItkWideCharLit INT POS .
  
FIXED
  ItkTextLit     INT POS (* value atom, Char count. *) .
  ItkWideTextLit INT POS (* value atom, Char count. *) .


LIST ItkActualsList . 
LIST ItkSubscriptsPlusList .

FIXED ItkAnonActual POS .
FIXED ItkNamedExpr IDENT POS . 

(* End of FM3IntToks. *) 


